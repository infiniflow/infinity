[  
  {
    "name": "default",
    "body": {
      "query": {
        "match_all": {}
      }
    }
  },
  {
    "name": "term",
    "body": {
      "query": {
        "term": {
          "country_code.raw": "AT"
        }
      }
    }
  },
  {
    "name": "phrase",
    "body": {
      "query": {
        "match_phrase": {
          "name": "Sankt Georgen"
        }
      }
    }
  },
  {
    "name": "country_agg_uncached",
    "body": {
      "size": 0,
      "aggs": {
        "country_population": {
          "terms": {
            "field": "country_code.raw"
          },
          "aggs": {
            "sum_population": {
              "sum": {
                "field": "population"
              }
            }
          }
        }
      }
    }
  },
  {
    "name": "country_agg_cached",
    "cache": true,
    "body": {
      "size": 0,
      "aggs": {
        "country_population": {
          "terms": {
            "field": "country_code.raw"
          },
          "aggs": {
            "sum_population": {
              "sum": {
                "field": "population"
              }
            }
          }
        }
      }
    }
  },
  {
    "name": "expression",
    "body": {
      "query": {
        "function_score": {
          "query": {
            "match_all": {}
          },
          "functions": [
            {
              "script_score": {
                "script": {
                  "source": "abs(ln(abs(doc['population']) + 1) + doc['location'].lon + doc['location'].lat) * _score",
                  "lang": "expression"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "painless_static",
    "body": {
      "query": {
        "function_score": {
          "query": {
            "match_all": {}
          },
          "functions": [
            {
              "script_score": {
                "script": {
                  "source": "Math.abs(Math.log(Math.abs((int)((List)doc.population).get(0)) + 1) + (double)(doc.location.lon) * (double)(doc.location.lat))/_score",
                  "lang": "painless"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "painless_dynamic",
    "body": {
      "query": {
        "function_score": {
          "query": {
            "match_all": {}
          },
          "functions": [
            {
              "script_score": {
                "script": {
                  "source": "Math.abs(Math.log(Math.abs(doc['population'].value) + 1) + doc['location'].lon * doc['location'].lat)/_score",
                  "lang": "painless"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "decay_geo_gauss_function_score",
    "body": {
      "query": {
        "function_score": {
          "query": {
            "match_all": {}
          },  
          "gauss": {
            "location": {
              "origin": "52.37, 4.8951",
              "scale": "500km",
              "offset": "0km",
              "decay" : 0.1
            }
          }     
        }
      }
    }
  },
 {
    "name": "decay_geo_gauss_script_score",
    "body": {
      "query": {
        "script_score": {
          "query": {
            "match_all": {}
          },
          "script": {
            "source": "decayGeoGauss(params.origin, params.scale, params.offset, params.decay, doc['location'].value)",
            "params": {
               "origin": "52.37, 4.8951",
                "scale": "500km",
                "offset": "0km",
                "decay" : 0.1 
            }
          }
        }
      }
    }
  },
  {
    "name": "field_value_function_score",
    "body": {
      "query": {
        "function_score": {
          "query": {
            "match_all": {}
          },
          "field_value_factor": {
            "field": "population",
            "factor": 1.2,
            "modifier": "log2p"
          }  
        }
      }
    }
  }, 
  {
    "name": "field_value_script_score",
    "body": {
      "query": {
        "script_score": {
          "query": {
            "match_all": {}
          },
          "script": {
            "source": "Math.log10(doc['population'].value * 1.2 + 2)"
          }
        }
      }
    }
  },

  {
    "name": "desc_sort_population",
    "body": {
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"population" : "desc"}
      ]
    }
  },
  {
    "name": "desc_sort_population_can_match_shortcut",
    "body": {
      "track_total_hits": false,
      "query": {
        "match": {
          "timezone": "America"
        }
      },
      "sort" : [
        {"population" : "desc"}
      ]
    }
  },
  {
    "name": "desc_sort_population_no_can_match_shortcut",
    "request-params" : {
        "pre_filter_shard_size" : 10000
    },
    "body": {
      "track_total_hits": false,
      "query": {
        "match": {
          "timezone": "America"
        }
      },
      "sort" : [
        {"population" : "desc"}
      ]
    }
  },
  {
    "name": "asc_sort_population",
    "body": {
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"population" : "asc"}
      ]
    }
  },
  {
    "name": "asc_sort_with_after_population",
    "body": {
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"population" : "asc"}
      ],
      "search_after" : [1000000]
    }
  },
  {
    "name": "desc_sort_geonameid",
    "body": {
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"geonameid" : "desc"}
      ]
    }
  },
  {
    "name": "desc_sort_with_after_geonameid",
    "body": {
      "track_total_hits": false,
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"geonameid" : "desc"}
      ],
      "search_after": [5000000]
    }
  },
  {
    "name": "asc_sort_geonameid",
    "body": {
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"geonameid" : "asc"}
      ]
    }
  },
  {
    "name": "asc_sort_with_after_geonameid",
    "body": {
      "track_total_hits": false,
      "query": {
        "match_all": {}
      },
      "sort" : [
        {"geonameid" : "asc"}
      ],
      "search_after": [5000000]
    }
  },
  {
    "name": "sort_country_code_can_match_shortcut",
    "body": {
      "track_total_hits": false,
      "query": {
        "match": {
          "timezone": "America"
        }
      },
      "sort" : [
        {"country_code.raw" : "asc"}
      ]
    }
  },
  {
    "name": "sort_country_code_no_can_match_shortcut",
    "request-params" : {
        "pre_filter_shard_size" : 10000
    },
    "body": {
      "track_total_hits": false,
      "query": {
        "match": {
          "timezone": "America"
        }
      },
      "sort" : [
        {"country_code.raw" : "asc"}
      ]
    }
  },
  {
    "name": "significant_text_selective",
    "body": {
      "size": 0,
      "query": {
        "match": {
          "alternatenames": "street"
        }
      },
      "aggs": {
        "sig": {
          "significant_text": {
            "field": "alternatenames"
          }
        }
      }
    }
  },
  {
    "name": "significant_text_sampled_selective",
    "body": {
      "size": 0,
      "query": {
        "match": {
          "alternatenames": "street"
        }
      },
      "aggs": {
        "s": {
          "sampler": {
            "shard_size": 100
          },
          "aggs": {
            "sig": {
              "significant_text": {
                "field": "alternatenames"
              }
            }
          }
        }
      }
    }
  },
  
  {
    "name": "significant_text_sampled_unselective",
    "body": {
      "size": 0,
      "query": {
        "match": {
          "timezone": "America"
        }
      },
      "aggs": {
        "s": {
          "sampler": {
            "shard_size": 100
          },
          "aggs": {
            "sig": {
              "significant_text": {
                "field": "alternatenames"
              }
            }
          }
        }
      }
    }
  }
]