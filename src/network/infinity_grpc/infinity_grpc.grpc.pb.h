// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: infinity_grpc.proto
// Original file comments:
// Copyright(C) 2023 InfiniFlow, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#ifndef GRPC_infinity_5fgrpc_2eproto__INCLUDED
#define GRPC_infinity_5fgrpc_2eproto__INCLUDED

#include "infinity_grpc.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace infinity_grpc_proto {

// network
class InfinityGrpcService final {
 public:
  static constexpr char const* service_full_name() {
    return "infinity_grpc_proto.InfinityGrpcService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncConnectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncConnectRaw(context, request, cq));
    }
    virtual ::grpc::Status DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncDisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncDisConnectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDisConnectRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncCreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncDropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncDropDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::infinity_grpc_proto::ListDatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>> AsyncListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>>(AsyncListDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>> PrepareAsyncListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>>(PrepareAsyncListDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::infinity_grpc_proto::DescribeDatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>> AsyncDescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>>(AsyncDescribeDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>> PrepareAsyncDescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>>(PrepareAsyncDescribeDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncGetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncGetDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncGetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncGetDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateTableRaw(context, request, cq));
    }
    virtual ::grpc::Status DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncDropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncDropTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropTableRaw(context, request, cq));
    }
    virtual ::grpc::Status ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::infinity_grpc_proto::ListTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>> AsyncListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>>(AsyncListTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>> PrepareAsyncListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>>(PrepareAsyncListTableRaw(context, request, cq));
    }
    virtual ::grpc::Status DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::infinity_grpc_proto::DescribeTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>> AsyncDescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>>(AsyncDescribeTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>> PrepareAsyncDescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>>(PrepareAsyncDescribeTableRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncGetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncGetTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncGetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncGetTableRaw(context, request, cq));
    }
    virtual ::grpc::Status Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncInsert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncInsertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncInsert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncInsertRaw(context, request, cq));
    }
    virtual ::grpc::Status Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncImport(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncImportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncImport(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncImportRaw(context, request, cq));
    }
    // rpc Update(Update) returns (Empty);
    // rpc Delete(Delete) returns (Empty);
    virtual ::grpc::Status CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncCreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::infinity_grpc_proto::CommonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> AsyncDropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(AsyncDropIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::infinity_grpc_proto::SelectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>> AsyncSearch(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>>(AsyncSearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>> PrepareAsyncSearch(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>>(PrepareAsyncSearchRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // rpc Update(Update) returns (Empty);
      // rpc Delete(Delete) returns (Empty);
      virtual void CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncDisConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDisConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>* AsyncListDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListDatabaseResponse>* PrepareAsyncListDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>* AsyncDescribeDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeDatabaseResponse>* PrepareAsyncDescribeDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncGetDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncGetDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncDropTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>* AsyncListTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::ListTableResponse>* PrepareAsyncListTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>* AsyncDescribeTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::DescribeTableResponse>* PrepareAsyncDescribeTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncGetTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncGetTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncInsertRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncInsertRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncImportRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncImportRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncCreateIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* AsyncDropIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>* AsyncSearchRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::infinity_grpc_proto::SelectResponse>* PrepareAsyncSearchRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncConnectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncConnectRaw(context, request, cq));
    }
    ::grpc::Status DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncDisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncDisConnectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDisConnectRaw(context, request, cq));
    }
    ::grpc::Status CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncCreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateDatabaseRaw(context, request, cq));
    }
    ::grpc::Status DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncDropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncDropDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropDatabaseRaw(context, request, cq));
    }
    ::grpc::Status ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::infinity_grpc_proto::ListDatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>> AsyncListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>>(AsyncListDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>> PrepareAsyncListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>>(PrepareAsyncListDatabaseRaw(context, request, cq));
    }
    ::grpc::Status DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::infinity_grpc_proto::DescribeDatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>> AsyncDescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>>(AsyncDescribeDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>> PrepareAsyncDescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>>(PrepareAsyncDescribeDatabaseRaw(context, request, cq));
    }
    ::grpc::Status GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncGetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncGetDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncGetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncGetDatabaseRaw(context, request, cq));
    }
    ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateTableRaw(context, request, cq));
    }
    ::grpc::Status DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncDropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncDropTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropTableRaw(context, request, cq));
    }
    ::grpc::Status ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::infinity_grpc_proto::ListTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>> AsyncListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>>(AsyncListTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>> PrepareAsyncListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>>(PrepareAsyncListTableRaw(context, request, cq));
    }
    ::grpc::Status DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::infinity_grpc_proto::DescribeTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>> AsyncDescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>>(AsyncDescribeTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>> PrepareAsyncDescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>>(PrepareAsyncDescribeTableRaw(context, request, cq));
    }
    ::grpc::Status GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncGetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncGetTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncGetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncGetTableRaw(context, request, cq));
    }
    ::grpc::Status Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncInsert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncInsertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncInsert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncInsertRaw(context, request, cq));
    }
    ::grpc::Status Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncImport(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncImportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncImport(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncImportRaw(context, request, cq));
    }
    ::grpc::Status CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncCreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncCreateIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncCreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncCreateIndexRaw(context, request, cq));
    }
    ::grpc::Status DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::infinity_grpc_proto::CommonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> AsyncDropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(AsyncDropIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>> PrepareAsyncDropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>>(PrepareAsyncDropIndexRaw(context, request, cq));
    }
    ::grpc::Status Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::infinity_grpc_proto::SelectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>> AsyncSearch(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>>(AsyncSearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>> PrepareAsyncSearch(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>>(PrepareAsyncSearchRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void Connect(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void DisConnect(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void DropDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void ListDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void DescribeDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDatabase(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void DropTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response, std::function<void(::grpc::Status)>) override;
      void ListTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response, std::function<void(::grpc::Status)>) override;
      void DescribeTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTable(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void Insert(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void Import(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, std::function<void(::grpc::Status)>) override;
      void DropIndex(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response, std::function<void(::grpc::Status)>) override;
      void Search(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncDisConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDisConnectRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DisConnectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>* AsyncListDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListDatabaseResponse>* PrepareAsyncListDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>* AsyncDescribeDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeDatabaseResponse>* PrepareAsyncDescribeDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncGetDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncGetDatabaseRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncDropTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>* AsyncListTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::ListTableResponse>* PrepareAsyncListTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ListTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>* AsyncDescribeTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::DescribeTableResponse>* PrepareAsyncDescribeTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncGetTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncGetTableRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::GetTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncInsertRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncInsertRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::InsertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncImportRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncImportRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::ImportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncCreateIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncCreateIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* AsyncDropIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::CommonResponse>* PrepareAsyncDropIndexRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::DropIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>* AsyncSearchRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::infinity_grpc_proto::SelectResponse>* PrepareAsyncSearchRaw(::grpc::ClientContext* context, const ::infinity_grpc_proto::SelectStatement& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Connect_;
    const ::grpc::internal::RpcMethod rpcmethod_DisConnect_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_DropDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_DescribeDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateTable_;
    const ::grpc::internal::RpcMethod rpcmethod_DropTable_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTable_;
    const ::grpc::internal::RpcMethod rpcmethod_DescribeTable_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTable_;
    const ::grpc::internal::RpcMethod rpcmethod_Insert_;
    const ::grpc::internal::RpcMethod rpcmethod_Import_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateIndex_;
    const ::grpc::internal::RpcMethod rpcmethod_DropIndex_;
    const ::grpc::internal::RpcMethod rpcmethod_Search_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Connect(::grpc::ServerContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status DisConnect(::grpc::ServerContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status CreateDatabase(::grpc::ServerContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status DropDatabase(::grpc::ServerContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status ListDatabase(::grpc::ServerContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response);
    virtual ::grpc::Status DescribeDatabase(::grpc::ServerContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response);
    virtual ::grpc::Status GetDatabase(::grpc::ServerContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status DropTable(::grpc::ServerContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status ListTable(::grpc::ServerContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response);
    virtual ::grpc::Status DescribeTable(::grpc::ServerContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response);
    virtual ::grpc::Status GetTable(::grpc::ServerContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status Insert(::grpc::ServerContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status Import(::grpc::ServerContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    // rpc Update(Update) returns (Empty);
    // rpc Delete(Delete) returns (Empty);
    virtual ::grpc::Status CreateIndex(::grpc::ServerContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status DropIndex(::grpc::ServerContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response);
    virtual ::grpc::Status Search(::grpc::ServerContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Connect() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnect(::grpc::ServerContext* context, ::infinity_grpc_proto::Empty* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DisConnect() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisConnect(::grpc::ServerContext* context, ::infinity_grpc_proto::DisConnectRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDatabase(::grpc::ServerContext* context, ::infinity_grpc_proto::CreateDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DropDatabase() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropDatabase(::grpc::ServerContext* context, ::infinity_grpc_proto::DropDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDatabase() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDatabase(::grpc::ServerContext* context, ::infinity_grpc_proto::ListDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::ListDatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeDatabase(::grpc::ServerContext* context, ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::DescribeDatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDatabase() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDatabase(::grpc::ServerContext* context, ::infinity_grpc_proto::GetDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateTable() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::infinity_grpc_proto::CreateTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DropTable() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropTable(::grpc::ServerContext* context, ::infinity_grpc_proto::DropTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTable() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTable(::grpc::ServerContext* context, ::infinity_grpc_proto::ListTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::ListTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DescribeTable() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeTable(::grpc::ServerContext* context, ::infinity_grpc_proto::DescribeTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::DescribeTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTable() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTable(::grpc::ServerContext* context, ::infinity_grpc_proto::GetTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Insert() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsert(::grpc::ServerContext* context, ::infinity_grpc_proto::InsertRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Import() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImport(::grpc::ServerContext* context, ::infinity_grpc_proto::ImportRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateIndex() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateIndex(::grpc::ServerContext* context, ::infinity_grpc_proto::CreateIndexRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DropIndex() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropIndex(::grpc::ServerContext* context, ::infinity_grpc_proto::DropIndexRequest* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::CommonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Search() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearch(::grpc::ServerContext* context, ::infinity_grpc_proto::SelectStatement* request, ::grpc::ServerAsyncResponseWriter< ::infinity_grpc_proto::SelectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Connect<WithAsyncMethod_DisConnect<WithAsyncMethod_CreateDatabase<WithAsyncMethod_DropDatabase<WithAsyncMethod_ListDatabase<WithAsyncMethod_DescribeDatabase<WithAsyncMethod_GetDatabase<WithAsyncMethod_CreateTable<WithAsyncMethod_DropTable<WithAsyncMethod_ListTable<WithAsyncMethod_DescribeTable<WithAsyncMethod_GetTable<WithAsyncMethod_Insert<WithAsyncMethod_Import<WithAsyncMethod_CreateIndex<WithAsyncMethod_DropIndex<WithAsyncMethod_Search<Service > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Connect() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::Empty, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::Empty* request, ::infinity_grpc_proto::CommonResponse* response) { return this->Connect(context, request, response); }));}
    void SetMessageAllocatorFor_Connect(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::Empty, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::Empty, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Connect(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DisConnect() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DisConnectRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DisConnectRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->DisConnect(context, request, response); }));}
    void SetMessageAllocatorFor_DisConnect(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DisConnectRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DisConnectRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DisConnect(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::CreateDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->CreateDatabase(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDatabase(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::CreateDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateDatabaseRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DropDatabase() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DropDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->DropDatabase(context, request, response); }));}
    void SetMessageAllocatorFor_DropDatabase(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DropDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropDatabaseRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListDatabase() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ListDatabaseRequest, ::infinity_grpc_proto::ListDatabaseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::ListDatabaseRequest* request, ::infinity_grpc_proto::ListDatabaseResponse* response) { return this->ListDatabase(context, request, response); }));}
    void SetMessageAllocatorFor_ListDatabase(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::ListDatabaseRequest, ::infinity_grpc_proto::ListDatabaseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ListDatabaseRequest, ::infinity_grpc_proto::ListDatabaseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DescribeDatabaseRequest, ::infinity_grpc_proto::DescribeDatabaseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DescribeDatabaseRequest* request, ::infinity_grpc_proto::DescribeDatabaseResponse* response) { return this->DescribeDatabase(context, request, response); }));}
    void SetMessageAllocatorFor_DescribeDatabase(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DescribeDatabaseRequest, ::infinity_grpc_proto::DescribeDatabaseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DescribeDatabaseRequest, ::infinity_grpc_proto::DescribeDatabaseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDatabase() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::GetDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::GetDatabaseRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->GetDatabase(context, request, response); }));}
    void SetMessageAllocatorFor_GetDatabase(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::GetDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::GetDatabaseRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateTable() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::CreateTableRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->CreateTable(context, request, response); }));}
    void SetMessageAllocatorFor_CreateTable(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::CreateTableRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateTableRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTable(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DropTable() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DropTableRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->DropTable(context, request, response); }));}
    void SetMessageAllocatorFor_DropTable(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DropTableRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropTableRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropTable(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTable() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ListTableRequest, ::infinity_grpc_proto::ListTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::ListTableRequest* request, ::infinity_grpc_proto::ListTableResponse* response) { return this->ListTable(context, request, response); }));}
    void SetMessageAllocatorFor_ListTable(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::ListTableRequest, ::infinity_grpc_proto::ListTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ListTableRequest, ::infinity_grpc_proto::ListTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTable(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DescribeTable() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DescribeTableRequest, ::infinity_grpc_proto::DescribeTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DescribeTableRequest* request, ::infinity_grpc_proto::DescribeTableResponse* response) { return this->DescribeTable(context, request, response); }));}
    void SetMessageAllocatorFor_DescribeTable(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DescribeTableRequest, ::infinity_grpc_proto::DescribeTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DescribeTableRequest, ::infinity_grpc_proto::DescribeTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeTable(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTable() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::GetTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::GetTableRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->GetTable(context, request, response); }));}
    void SetMessageAllocatorFor_GetTable(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::GetTableRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::GetTableRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTable(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Insert() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::InsertRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::InsertRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->Insert(context, request, response); }));}
    void SetMessageAllocatorFor_Insert(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::InsertRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::InsertRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Insert(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Import() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ImportRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::ImportRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->Import(context, request, response); }));}
    void SetMessageAllocatorFor_Import(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::ImportRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::ImportRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Import(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateIndex() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateIndexRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::CreateIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->CreateIndex(context, request, response); }));}
    void SetMessageAllocatorFor_CreateIndex(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::CreateIndexRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::CreateIndexRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DropIndex() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropIndexRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::DropIndexRequest* request, ::infinity_grpc_proto::CommonResponse* response) { return this->DropIndex(context, request, response); }));}
    void SetMessageAllocatorFor_DropIndex(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::DropIndexRequest, ::infinity_grpc_proto::CommonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::DropIndexRequest, ::infinity_grpc_proto::CommonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Search() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::SelectStatement, ::infinity_grpc_proto::SelectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::infinity_grpc_proto::SelectStatement* request, ::infinity_grpc_proto::SelectResponse* response) { return this->Search(context, request, response); }));}
    void SetMessageAllocatorFor_Search(
        ::grpc::MessageAllocator< ::infinity_grpc_proto::SelectStatement, ::infinity_grpc_proto::SelectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::infinity_grpc_proto::SelectStatement, ::infinity_grpc_proto::SelectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Search(
      ::grpc::CallbackServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Connect<WithCallbackMethod_DisConnect<WithCallbackMethod_CreateDatabase<WithCallbackMethod_DropDatabase<WithCallbackMethod_ListDatabase<WithCallbackMethod_DescribeDatabase<WithCallbackMethod_GetDatabase<WithCallbackMethod_CreateTable<WithCallbackMethod_DropTable<WithCallbackMethod_ListTable<WithCallbackMethod_DescribeTable<WithCallbackMethod_GetTable<WithCallbackMethod_Insert<WithCallbackMethod_Import<WithCallbackMethod_CreateIndex<WithCallbackMethod_DropIndex<WithCallbackMethod_Search<Service > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Connect() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DisConnect() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DropDatabase() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDatabase() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDatabase() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateTable() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DropTable() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTable() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DescribeTable() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTable() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Insert() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Import() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateIndex() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DropIndex() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Search() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Connect() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnect(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DisConnect() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisConnect(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DropDatabase() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDatabase() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDatabase() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateTable() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DropTable() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTable() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DescribeTable() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTable() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Insert() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsert(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Import() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateIndex() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DropIndex() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Search() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Connect() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Connect(context, request, response); }));
    }
    ~WithRawCallbackMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Connect(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DisConnect() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DisConnect(context, request, response); }));
    }
    ~WithRawCallbackMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DisConnect(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDatabase(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DropDatabase() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DropDatabase(context, request, response); }));
    }
    ~WithRawCallbackMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListDatabase() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDatabase(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DescribeDatabase(context, request, response); }));
    }
    ~WithRawCallbackMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDatabase() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDatabase(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDatabase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateTable() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DropTable() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DropTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTable() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DescribeTable() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DescribeTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTable() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Insert() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Insert(context, request, response); }));
    }
    ~WithRawCallbackMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Insert(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Import() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Import(context, request, response); }));
    }
    ~WithRawCallbackMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Import(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateIndex() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateIndex(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DropIndex() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DropIndex(context, request, response); }));
    }
    ~WithRawCallbackMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Search() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Search(context, request, response); }));
    }
    ~WithRawCallbackMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Search(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Connect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Connect() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::Empty, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::Empty, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedConnect(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Connect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Connect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::Empty* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConnect(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::Empty,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DisConnect : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DisConnect() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DisConnectRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DisConnectRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedDisConnect(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DisConnect() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DisConnect(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DisConnectRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisConnect(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DisConnectRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::CreateDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::CreateDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedCreateDatabase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::CreateDatabaseRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DropDatabase() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DropDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DropDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedDropDatabase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DropDatabaseRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDatabase() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::ListDatabaseRequest, ::infinity_grpc_proto::ListDatabaseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::ListDatabaseRequest, ::infinity_grpc_proto::ListDatabaseResponse>* streamer) {
                       return this->StreamedListDatabase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListDatabaseRequest* /*request*/, ::infinity_grpc_proto::ListDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::ListDatabaseRequest,::infinity_grpc_proto::ListDatabaseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DescribeDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DescribeDatabase() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DescribeDatabaseRequest, ::infinity_grpc_proto::DescribeDatabaseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DescribeDatabaseRequest, ::infinity_grpc_proto::DescribeDatabaseResponse>* streamer) {
                       return this->StreamedDescribeDatabase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DescribeDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DescribeDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeDatabaseRequest* /*request*/, ::infinity_grpc_proto::DescribeDatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDescribeDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DescribeDatabaseRequest,::infinity_grpc_proto::DescribeDatabaseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDatabase() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::GetDatabaseRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::GetDatabaseRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedGetDatabase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDatabase(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetDatabaseRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::GetDatabaseRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateTable() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::CreateTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::CreateTableRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedCreateTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::CreateTableRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DropTable() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DropTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DropTableRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedDropTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DropTableRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTable() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::ListTableRequest, ::infinity_grpc_proto::ListTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::ListTableRequest, ::infinity_grpc_proto::ListTableResponse>* streamer) {
                       return this->StreamedListTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ListTableRequest* /*request*/, ::infinity_grpc_proto::ListTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::ListTableRequest,::infinity_grpc_proto::ListTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DescribeTable() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DescribeTableRequest, ::infinity_grpc_proto::DescribeTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DescribeTableRequest, ::infinity_grpc_proto::DescribeTableResponse>* streamer) {
                       return this->StreamedDescribeTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DescribeTableRequest* /*request*/, ::infinity_grpc_proto::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDescribeTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DescribeTableRequest,::infinity_grpc_proto::DescribeTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTable() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::GetTableRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::GetTableRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedGetTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::GetTableRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::GetTableRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Insert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Insert() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::InsertRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::InsertRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedInsert(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Insert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Insert(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::InsertRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsert(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::InsertRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Import : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Import() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::ImportRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::ImportRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedImport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Import() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Import(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::ImportRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::ImportRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateIndex() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::CreateIndexRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::CreateIndexRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedCreateIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::CreateIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::CreateIndexRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DropIndex() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::DropIndexRequest, ::infinity_grpc_proto::CommonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::DropIndexRequest, ::infinity_grpc_proto::CommonResponse>* streamer) {
                       return this->StreamedDropIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::DropIndexRequest* /*request*/, ::infinity_grpc_proto::CommonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::DropIndexRequest,::infinity_grpc_proto::CommonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Search() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::infinity_grpc_proto::SelectStatement, ::infinity_grpc_proto::SelectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::infinity_grpc_proto::SelectStatement, ::infinity_grpc_proto::SelectResponse>* streamer) {
                       return this->StreamedSearch(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::infinity_grpc_proto::SelectStatement* /*request*/, ::infinity_grpc_proto::SelectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::infinity_grpc_proto::SelectStatement,::infinity_grpc_proto::SelectResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Connect<WithStreamedUnaryMethod_DisConnect<WithStreamedUnaryMethod_CreateDatabase<WithStreamedUnaryMethod_DropDatabase<WithStreamedUnaryMethod_ListDatabase<WithStreamedUnaryMethod_DescribeDatabase<WithStreamedUnaryMethod_GetDatabase<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_DropTable<WithStreamedUnaryMethod_ListTable<WithStreamedUnaryMethod_DescribeTable<WithStreamedUnaryMethod_GetTable<WithStreamedUnaryMethod_Insert<WithStreamedUnaryMethod_Import<WithStreamedUnaryMethod_CreateIndex<WithStreamedUnaryMethod_DropIndex<WithStreamedUnaryMethod_Search<Service > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Connect<WithStreamedUnaryMethod_DisConnect<WithStreamedUnaryMethod_CreateDatabase<WithStreamedUnaryMethod_DropDatabase<WithStreamedUnaryMethod_ListDatabase<WithStreamedUnaryMethod_DescribeDatabase<WithStreamedUnaryMethod_GetDatabase<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_DropTable<WithStreamedUnaryMethod_ListTable<WithStreamedUnaryMethod_DescribeTable<WithStreamedUnaryMethod_GetTable<WithStreamedUnaryMethod_Insert<WithStreamedUnaryMethod_Import<WithStreamedUnaryMethod_CreateIndex<WithStreamedUnaryMethod_DropIndex<WithStreamedUnaryMethod_Search<Service > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace infinity_grpc_proto


#endif  // GRPC_infinity_5fgrpc_2eproto__INCLUDED
