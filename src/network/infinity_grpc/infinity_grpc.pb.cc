// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: infinity_grpc.proto

#include "infinity_grpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace infinity_grpc_proto {
PROTOBUF_CONSTEXPR Options::Options(
    ::_pbi::ConstantInitialized) {}
struct OptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionsDefaultTypeInternal() {}
  union {
    Options _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionsDefaultTypeInternal _Options_default_instance_;
PROTOBUF_CONSTEXPR CreateDatabaseRequest::CreateDatabaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDatabaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDatabaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDatabaseRequestDefaultTypeInternal() {}
  union {
    CreateDatabaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDatabaseRequestDefaultTypeInternal _CreateDatabaseRequest_default_instance_;
PROTOBUF_CONSTEXPR DropDatabaseRequest::DropDatabaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DropDatabaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DropDatabaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DropDatabaseRequestDefaultTypeInternal() {}
  union {
    DropDatabaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DropDatabaseRequestDefaultTypeInternal _DropDatabaseRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateTableRequest::CreateTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_defs_)*/{}
  , /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTableRequestDefaultTypeInternal() {}
  union {
    CreateTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTableRequestDefaultTypeInternal _CreateTableRequest_default_instance_;
PROTOBUF_CONSTEXPR ColumnConstraint::ColumnConstraint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.constraint_)*/{}
  , /*decltype(_impl_._constraint_cached_byte_size_)*/{0}
  , /*decltype(_impl_.column_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColumnConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnConstraintDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnConstraintDefaultTypeInternal() {}
  union {
    ColumnConstraint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnConstraintDefaultTypeInternal _ColumnConstraint_default_instance_;
PROTOBUF_CONSTEXPR ColumnDef::ColumnDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.constraints_)*/{}
  , /*decltype(_impl_._constraints_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.column_type_)*/nullptr
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColumnDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnDefDefaultTypeInternal() {}
  union {
    ColumnDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnDefDefaultTypeInternal _ColumnDef_default_instance_;
PROTOBUF_CONSTEXPR DataType::DataType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.logic_type_)*/0
  , /*decltype(_impl_.PhysicalType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct DataTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataTypeDefaultTypeInternal() {}
  union {
    DataType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataTypeDefaultTypeInternal _DataType_default_instance_;
PROTOBUF_CONSTEXPR EmbeddingType::EmbeddingType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.embedding_data_type_)*/0
  , /*decltype(_impl_.dimension_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmbeddingTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmbeddingTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmbeddingTypeDefaultTypeInternal() {}
  union {
    EmbeddingType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmbeddingTypeDefaultTypeInternal _EmbeddingType_default_instance_;
PROTOBUF_CONSTEXPR VarcharType::VarcharType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VarcharTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VarcharTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VarcharTypeDefaultTypeInternal() {}
  union {
    VarcharType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VarcharTypeDefaultTypeInternal _VarcharType_default_instance_;
PROTOBUF_CONSTEXPR NumberType::NumberType(
    ::_pbi::ConstantInitialized) {}
struct NumberTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NumberTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NumberTypeDefaultTypeInternal() {}
  union {
    NumberType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NumberTypeDefaultTypeInternal _NumberType_default_instance_;
PROTOBUF_CONSTEXPR DropTableRequest::DropTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DropTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DropTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DropTableRequestDefaultTypeInternal() {}
  union {
    DropTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DropTableRequestDefaultTypeInternal _DropTableRequest_default_instance_;
PROTOBUF_CONSTEXPR InsertRequest::InsertRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_names_)*/{}
  , /*decltype(_impl_.fields_)*/{}
  , /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InsertRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertRequestDefaultTypeInternal() {}
  union {
    InsertRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertRequestDefaultTypeInternal _InsertRequest_default_instance_;
PROTOBUF_CONSTEXPR Field::Field(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parse_exprs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDefaultTypeInternal() {}
  union {
    Field _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDefaultTypeInternal _Field_default_instance_;
PROTOBUF_CONSTEXPR ImportRequest_ImportOptions::ImportRequest_ImportOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delimiter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.schema_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.copy_from_)*/false
  , /*decltype(_impl_.has_header_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ImportRequest_ImportOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportRequest_ImportOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportRequest_ImportOptionsDefaultTypeInternal() {}
  union {
    ImportRequest_ImportOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportRequest_ImportOptionsDefaultTypeInternal _ImportRequest_ImportOptions_default_instance_;
PROTOBUF_CONSTEXPR ImportRequest::ImportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.import_options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ImportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportRequestDefaultTypeInternal() {}
  union {
    ImportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportRequestDefaultTypeInternal _ImportRequest_default_instance_;
PROTOBUF_CONSTEXPR ParsedExpr::ParsedExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.alias_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ParsedExprType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ParsedExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParsedExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParsedExprDefaultTypeInternal() {}
  union {
    ParsedExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParsedExprDefaultTypeInternal _ParsedExpr_default_instance_;
PROTOBUF_CONSTEXPR ConstantExpr::ConstantExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.long_array_)*/{}
  , /*decltype(_impl_._long_array_cached_byte_size_)*/{0}
  , /*decltype(_impl_.double_array_)*/{}
  , /*decltype(_impl_.str_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.date_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.literal_type_)*/0
  , /*decltype(_impl_.bool_value_)*/false
  , /*decltype(_impl_.i64_value_)*/int64_t{0}
  , /*decltype(_impl_.f64_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConstantExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstantExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstantExprDefaultTypeInternal() {}
  union {
    ConstantExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstantExprDefaultTypeInternal _ConstantExpr_default_instance_;
PROTOBUF_CONSTEXPR FunctionExpr::FunctionExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.function_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionExprDefaultTypeInternal() {}
  union {
    FunctionExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionExprDefaultTypeInternal _FunctionExpr_default_instance_;
PROTOBUF_CONSTEXPR ColumnExpr::ColumnExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_name_)*/{}
  , /*decltype(_impl_.star_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColumnExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnExprDefaultTypeInternal() {}
  union {
    ColumnExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnExprDefaultTypeInternal _ColumnExpr_default_instance_;
PROTOBUF_CONSTEXPR BetweenExpr::BetweenExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.upper_bound_)*/nullptr
  , /*decltype(_impl_.lower_bound_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BetweenExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BetweenExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BetweenExprDefaultTypeInternal() {}
  union {
    BetweenExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BetweenExprDefaultTypeInternal _BetweenExpr_default_instance_;
PROTOBUF_CONSTEXPR InExpr::InExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.left_)*/nullptr
  , /*decltype(_impl_.not_in_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InExprDefaultTypeInternal() {}
  union {
    InExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InExprDefaultTypeInternal _InExpr_default_instance_;
PROTOBUF_CONSTEXPR KnnExpr::KnnExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.embedding_data_)*/{}
  , /*decltype(_impl_.column_expr_)*/nullptr
  , /*decltype(_impl_.dimension_)*/int64_t{0}
  , /*decltype(_impl_.embedding_data_type_)*/0
  , /*decltype(_impl_.distance_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KnnExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KnnExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KnnExprDefaultTypeInternal() {}
  union {
    KnnExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KnnExprDefaultTypeInternal _KnnExpr_default_instance_;
PROTOBUF_CONSTEXPR SelectStatement::SelectStatement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.select_list_)*/{}
  , /*decltype(_impl_.group_by_list_)*/{}
  , /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.where_expr_)*/nullptr
  , /*decltype(_impl_.limit_expr_)*/nullptr
  , /*decltype(_impl_.offset_expr_)*/nullptr
  , /*decltype(_impl_.search_expr_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SelectStatementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectStatementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectStatementDefaultTypeInternal() {}
  union {
    SelectStatement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectStatementDefaultTypeInternal _SelectStatement_default_instance_;
PROTOBUF_CONSTEXPR DisConnectRequest::DisConnectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisConnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisConnectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisConnectRequestDefaultTypeInternal() {}
  union {
    DisConnectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisConnectRequestDefaultTypeInternal _DisConnectRequest_default_instance_;
PROTOBUF_CONSTEXPR Empty::Empty(
    ::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
PROTOBUF_CONSTEXPR CommonResponse::CommonResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommonResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonResponseDefaultTypeInternal() {}
  union {
    CommonResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonResponseDefaultTypeInternal _CommonResponse_default_instance_;
PROTOBUF_CONSTEXPR SelectResponse::SelectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_defs_)*/{}
  , /*decltype(_impl_.column_fields_)*/{}
  , /*decltype(_impl_.error_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SelectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectResponseDefaultTypeInternal() {}
  union {
    SelectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectResponseDefaultTypeInternal _SelectResponse_default_instance_;
PROTOBUF_CONSTEXPR ColumnField::ColumnField(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.column_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColumnFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnFieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnFieldDefaultTypeInternal() {}
  union {
    ColumnField _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnFieldDefaultTypeInternal _ColumnField_default_instance_;
PROTOBUF_CONSTEXPR DataBlock_ColumnVector::DataBlock_ColumnVector(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_vectors_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DataBlock_ColumnVectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataBlock_ColumnVectorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataBlock_ColumnVectorDefaultTypeInternal() {}
  union {
    DataBlock_ColumnVector _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataBlock_ColumnVectorDefaultTypeInternal _DataBlock_ColumnVector_default_instance_;
PROTOBUF_CONSTEXPR DataBlock::DataBlock(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_vectors_)*/{}
  , /*decltype(_impl_.row_count_)*/0
  , /*decltype(_impl_.column_count_)*/0
  , /*decltype(_impl_.capacity_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DataBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataBlockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataBlockDefaultTypeInternal() {}
  union {
    DataBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataBlockDefaultTypeInternal _DataBlock_default_instance_;
PROTOBUF_CONSTEXPR ListDatabaseRequest::ListDatabaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListDatabaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDatabaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDatabaseRequestDefaultTypeInternal() {}
  union {
    ListDatabaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDatabaseRequestDefaultTypeInternal _ListDatabaseRequest_default_instance_;
PROTOBUF_CONSTEXPR ListDatabaseResponse::ListDatabaseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_names_)*/{}
  , /*decltype(_impl_.error_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListDatabaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDatabaseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDatabaseResponseDefaultTypeInternal() {}
  union {
    ListDatabaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDatabaseResponseDefaultTypeInternal _ListDatabaseResponse_default_instance_;
PROTOBUF_CONSTEXPR DescribeDatabaseRequest::DescribeDatabaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DescribeDatabaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DescribeDatabaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DescribeDatabaseRequestDefaultTypeInternal() {}
  union {
    DescribeDatabaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DescribeDatabaseRequestDefaultTypeInternal _DescribeDatabaseRequest_default_instance_;
PROTOBUF_CONSTEXPR DescribeDatabaseResponse::DescribeDatabaseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.db_id_)*/0
  , /*decltype(_impl_.num_segments_)*/0
  , /*decltype(_impl_.num_blocks_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DescribeDatabaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DescribeDatabaseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DescribeDatabaseResponseDefaultTypeInternal() {}
  union {
    DescribeDatabaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DescribeDatabaseResponseDefaultTypeInternal _DescribeDatabaseResponse_default_instance_;
PROTOBUF_CONSTEXPR ListTableRequest::ListTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTableRequestDefaultTypeInternal() {}
  union {
    ListTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTableRequestDefaultTypeInternal _ListTableRequest_default_instance_;
PROTOBUF_CONSTEXPR ListTableResponse::ListTableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.table_name_)*/{}
  , /*decltype(_impl_.error_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTableResponseDefaultTypeInternal() {}
  union {
    ListTableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTableResponseDefaultTypeInternal _ListTableResponse_default_instance_;
PROTOBUF_CONSTEXPR DescribeTableRequest::DescribeTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DescribeTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DescribeTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DescribeTableRequestDefaultTypeInternal() {}
  union {
    DescribeTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DescribeTableRequestDefaultTypeInternal _DescribeTableRequest_default_instance_;
PROTOBUF_CONSTEXPR DescribeTableResponse::DescribeTableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_id_)*/0
  , /*decltype(_impl_.num_segments_)*/0
  , /*decltype(_impl_.num_blocks_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DescribeTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DescribeTableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DescribeTableResponseDefaultTypeInternal() {}
  union {
    DescribeTableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DescribeTableResponseDefaultTypeInternal _DescribeTableResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDatabaseRequest::GetDatabaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDatabaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDatabaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDatabaseRequestDefaultTypeInternal() {}
  union {
    GetDatabaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDatabaseRequestDefaultTypeInternal _GetDatabaseRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTableRequest::GetTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableRequestDefaultTypeInternal() {}
  union {
    GetTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableRequestDefaultTypeInternal _GetTableRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateIndexRequest::CreateIndexRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.column_names_)*/{}
  , /*decltype(_impl_.index_para_list_)*/{}
  , /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.index_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.method_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateIndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateIndexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateIndexRequestDefaultTypeInternal() {}
  union {
    CreateIndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateIndexRequestDefaultTypeInternal _CreateIndexRequest_default_instance_;
PROTOBUF_CONSTEXPR InitParameter::InitParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.para_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.para_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InitParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitParameterDefaultTypeInternal() {}
  union {
    InitParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitParameterDefaultTypeInternal _InitParameter_default_instance_;
PROTOBUF_CONSTEXPR DropIndexRequest::DropIndexRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.db_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.table_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.index_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DropIndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DropIndexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DropIndexRequestDefaultTypeInternal() {}
  union {
    DropIndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DropIndexRequestDefaultTypeInternal _DropIndexRequest_default_instance_;
}  // namespace infinity_grpc_proto
static ::_pb::Metadata file_level_metadata_infinity_5fgrpc_2eproto[43];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_infinity_5fgrpc_2eproto[8];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_infinity_5fgrpc_2eproto = nullptr;

const uint32_t TableStruct_infinity_5fgrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateDatabaseRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateDatabaseRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateDatabaseRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropDatabaseRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropDatabaseRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropDatabaseRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _impl_.column_defs_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateTableRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnConstraint, _impl_.column_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnConstraint, _impl_.constraint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnDef, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnDef, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnDef, _impl_.column_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnDef, _impl_.constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataType, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataType, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataType, _impl_.logic_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataType, _impl_.PhysicalType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::EmbeddingType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::EmbeddingType, _impl_.embedding_data_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::EmbeddingType, _impl_.dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::VarcharType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::VarcharType, _impl_.width_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::NumberType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropTableRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropTableRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropTableRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropTableRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _impl_.column_names_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _impl_.fields_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InsertRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::Field, _impl_.parse_exprs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.delimiter_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.file_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.schema_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.copy_from_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest_ImportOptions, _impl_.has_header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _impl_.file_path_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _impl_.import_options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ImportRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ParsedExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ParsedExpr, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ParsedExpr, _impl_.alias_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ParsedExpr, _impl_.ParsedExprType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.literal_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.bool_value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.i64_value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.f64_value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.str_value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.date_value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.long_array_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ConstantExpr, _impl_.double_array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::FunctionExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::FunctionExpr, _impl_.function_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::FunctionExpr, _impl_.arguments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnExpr, _impl_.column_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnExpr, _impl_.star_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::BetweenExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::BetweenExpr, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::BetweenExpr, _impl_.upper_bound_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::BetweenExpr, _impl_.lower_bound_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InExpr, _impl_.left_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InExpr, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InExpr, _impl_.not_in_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _impl_.column_expr_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _impl_.embedding_data_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _impl_.dimension_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _impl_.embedding_data_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::KnnExpr, _impl_.distance_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.session_id_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.select_list_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.where_expr_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.group_by_list_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.limit_expr_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.offset_expr_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectStatement, _impl_.search_expr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DisConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DisConnectRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CommonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CommonResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CommonResponse, _impl_.error_msg_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CommonResponse, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectResponse, _impl_.error_msg_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectResponse, _impl_.column_defs_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::SelectResponse, _impl_.column_fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnField, _impl_.column_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ColumnField, _impl_.column_vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock_ColumnVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock_ColumnVector, _impl_.column_vectors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock, _impl_.row_count_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock, _impl_.column_count_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock, _impl_.capacity_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DataBlock, _impl_.column_vectors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseResponse, _impl_.db_names_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListDatabaseResponse, _impl_.error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseResponse, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseResponse, _impl_.db_id_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseResponse, _impl_.num_segments_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeDatabaseResponse, _impl_.num_blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableRequest, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableRequest, _impl_.error_msg_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableResponse, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::ListTableResponse, _impl_.error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableResponse, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableResponse, _impl_.table_id_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableResponse, _impl_.num_segments_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DescribeTableResponse, _impl_.num_blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetDatabaseRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetDatabaseRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetTableRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetTableRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::GetTableRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.index_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.method_type_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.column_names_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.index_para_list_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::CreateIndexRequest, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InitParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InitParameter, _impl_.para_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::InitParameter, _impl_.para_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropIndexRequest, _impl_.db_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropIndexRequest, _impl_.table_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropIndexRequest, _impl_.index_name_),
  PROTOBUF_FIELD_OFFSET(::infinity_grpc_proto::DropIndexRequest, _impl_.session_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::infinity_grpc_proto::Options)},
  { 6, -1, -1, sizeof(::infinity_grpc_proto::CreateDatabaseRequest)},
  { 15, -1, -1, sizeof(::infinity_grpc_proto::DropDatabaseRequest)},
  { 24, -1, -1, sizeof(::infinity_grpc_proto::CreateTableRequest)},
  { 35, -1, -1, sizeof(::infinity_grpc_proto::ColumnConstraint)},
  { 43, -1, -1, sizeof(::infinity_grpc_proto::ColumnDef)},
  { 53, -1, -1, sizeof(::infinity_grpc_proto::DataType)},
  { 64, -1, -1, sizeof(::infinity_grpc_proto::EmbeddingType)},
  { 72, -1, -1, sizeof(::infinity_grpc_proto::VarcharType)},
  { 79, -1, -1, sizeof(::infinity_grpc_proto::NumberType)},
  { 85, -1, -1, sizeof(::infinity_grpc_proto::DropTableRequest)},
  { 95, -1, -1, sizeof(::infinity_grpc_proto::InsertRequest)},
  { 106, -1, -1, sizeof(::infinity_grpc_proto::Field)},
  { 113, -1, -1, sizeof(::infinity_grpc_proto::ImportRequest_ImportOptions)},
  { 125, -1, -1, sizeof(::infinity_grpc_proto::ImportRequest)},
  { 136, -1, -1, sizeof(::infinity_grpc_proto::ParsedExpr)},
  { 148, -1, -1, sizeof(::infinity_grpc_proto::ConstantExpr)},
  { 162, -1, -1, sizeof(::infinity_grpc_proto::FunctionExpr)},
  { 170, -1, -1, sizeof(::infinity_grpc_proto::ColumnExpr)},
  { 178, -1, -1, sizeof(::infinity_grpc_proto::BetweenExpr)},
  { 187, -1, -1, sizeof(::infinity_grpc_proto::InExpr)},
  { 196, -1, -1, sizeof(::infinity_grpc_proto::KnnExpr)},
  { 207, -1, -1, sizeof(::infinity_grpc_proto::SelectStatement)},
  { 222, -1, -1, sizeof(::infinity_grpc_proto::DisConnectRequest)},
  { 229, -1, -1, sizeof(::infinity_grpc_proto::Empty)},
  { 235, -1, -1, sizeof(::infinity_grpc_proto::CommonResponse)},
  { 244, -1, -1, sizeof(::infinity_grpc_proto::SelectResponse)},
  { 254, -1, -1, sizeof(::infinity_grpc_proto::ColumnField)},
  { 262, -1, -1, sizeof(::infinity_grpc_proto::DataBlock_ColumnVector)},
  { 269, -1, -1, sizeof(::infinity_grpc_proto::DataBlock)},
  { 279, -1, -1, sizeof(::infinity_grpc_proto::ListDatabaseRequest)},
  { 286, -1, -1, sizeof(::infinity_grpc_proto::ListDatabaseResponse)},
  { 295, -1, -1, sizeof(::infinity_grpc_proto::DescribeDatabaseRequest)},
  { 303, -1, -1, sizeof(::infinity_grpc_proto::DescribeDatabaseResponse)},
  { 313, -1, -1, sizeof(::infinity_grpc_proto::ListTableRequest)},
  { 323, -1, -1, sizeof(::infinity_grpc_proto::ListTableResponse)},
  { 332, -1, -1, sizeof(::infinity_grpc_proto::DescribeTableRequest)},
  { 340, -1, -1, sizeof(::infinity_grpc_proto::DescribeTableResponse)},
  { 350, -1, -1, sizeof(::infinity_grpc_proto::GetDatabaseRequest)},
  { 358, -1, -1, sizeof(::infinity_grpc_proto::GetTableRequest)},
  { 367, -1, -1, sizeof(::infinity_grpc_proto::CreateIndexRequest)},
  { 381, -1, -1, sizeof(::infinity_grpc_proto::InitParameter)},
  { 389, -1, -1, sizeof(::infinity_grpc_proto::DropIndexRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::infinity_grpc_proto::_Options_default_instance_._instance,
  &::infinity_grpc_proto::_CreateDatabaseRequest_default_instance_._instance,
  &::infinity_grpc_proto::_DropDatabaseRequest_default_instance_._instance,
  &::infinity_grpc_proto::_CreateTableRequest_default_instance_._instance,
  &::infinity_grpc_proto::_ColumnConstraint_default_instance_._instance,
  &::infinity_grpc_proto::_ColumnDef_default_instance_._instance,
  &::infinity_grpc_proto::_DataType_default_instance_._instance,
  &::infinity_grpc_proto::_EmbeddingType_default_instance_._instance,
  &::infinity_grpc_proto::_VarcharType_default_instance_._instance,
  &::infinity_grpc_proto::_NumberType_default_instance_._instance,
  &::infinity_grpc_proto::_DropTableRequest_default_instance_._instance,
  &::infinity_grpc_proto::_InsertRequest_default_instance_._instance,
  &::infinity_grpc_proto::_Field_default_instance_._instance,
  &::infinity_grpc_proto::_ImportRequest_ImportOptions_default_instance_._instance,
  &::infinity_grpc_proto::_ImportRequest_default_instance_._instance,
  &::infinity_grpc_proto::_ParsedExpr_default_instance_._instance,
  &::infinity_grpc_proto::_ConstantExpr_default_instance_._instance,
  &::infinity_grpc_proto::_FunctionExpr_default_instance_._instance,
  &::infinity_grpc_proto::_ColumnExpr_default_instance_._instance,
  &::infinity_grpc_proto::_BetweenExpr_default_instance_._instance,
  &::infinity_grpc_proto::_InExpr_default_instance_._instance,
  &::infinity_grpc_proto::_KnnExpr_default_instance_._instance,
  &::infinity_grpc_proto::_SelectStatement_default_instance_._instance,
  &::infinity_grpc_proto::_DisConnectRequest_default_instance_._instance,
  &::infinity_grpc_proto::_Empty_default_instance_._instance,
  &::infinity_grpc_proto::_CommonResponse_default_instance_._instance,
  &::infinity_grpc_proto::_SelectResponse_default_instance_._instance,
  &::infinity_grpc_proto::_ColumnField_default_instance_._instance,
  &::infinity_grpc_proto::_DataBlock_ColumnVector_default_instance_._instance,
  &::infinity_grpc_proto::_DataBlock_default_instance_._instance,
  &::infinity_grpc_proto::_ListDatabaseRequest_default_instance_._instance,
  &::infinity_grpc_proto::_ListDatabaseResponse_default_instance_._instance,
  &::infinity_grpc_proto::_DescribeDatabaseRequest_default_instance_._instance,
  &::infinity_grpc_proto::_DescribeDatabaseResponse_default_instance_._instance,
  &::infinity_grpc_proto::_ListTableRequest_default_instance_._instance,
  &::infinity_grpc_proto::_ListTableResponse_default_instance_._instance,
  &::infinity_grpc_proto::_DescribeTableRequest_default_instance_._instance,
  &::infinity_grpc_proto::_DescribeTableResponse_default_instance_._instance,
  &::infinity_grpc_proto::_GetDatabaseRequest_default_instance_._instance,
  &::infinity_grpc_proto::_GetTableRequest_default_instance_._instance,
  &::infinity_grpc_proto::_CreateIndexRequest_default_instance_._instance,
  &::infinity_grpc_proto::_InitParameter_default_instance_._instance,
  &::infinity_grpc_proto::_DropIndexRequest_default_instance_._instance,
};

const char descriptor_table_protodef_infinity_5fgrpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023infinity_grpc.proto\022\023infinity_grpc_pro"
  "to\"\t\n\007Options\"k\n\025CreateDatabaseRequest\022\017"
  "\n\007db_name\030\001 \001(\t\022-\n\007options\030\002 \001(\0132\034.infin"
  "ity_grpc_proto.Options\022\022\n\nsession_id\030\003 \001"
  "(\004\"i\n\023DropDatabaseRequest\022\017\n\007db_name\030\001 \001"
  "(\t\022-\n\007options\030\002 \001(\0132\034.infinity_grpc_prot"
  "o.Options\022\022\n\nsession_id\030\003 \001(\004\"\261\001\n\022Create"
  "TableRequest\022\017\n\007db_name\030\001 \001(\t\022\022\n\ntable_n"
  "ame\030\002 \001(\t\0223\n\013column_defs\030\003 \003(\0132\036.infinit"
  "y_grpc_proto.ColumnDef\022-\n\007options\030\005 \001(\0132"
  "\034.infinity_grpc_proto.Options\022\022\n\nsession"
  "_id\030\006 \001(\004\"\\\n\020ColumnConstraint\022\023\n\013column_"
  "name\030\001 \001(\t\0223\n\nconstraint\030\002 \003(\0162\037.infinit"
  "y_grpc_proto.Constraint\"\217\001\n\tColumnDef\022\n\n"
  "\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\0222\n\013column_type\030\003"
  " \001(\0132\035.infinity_grpc_proto.DataType\0224\n\013c"
  "onstraints\030\004 \003(\0162\037.infinity_grpc_proto.C"
  "onstraint\"\376\001\n\010DataType\0222\n\nlogic_type\030\001 \001"
  "(\0162\036.infinity_grpc_proto.LogicType\0226\n\013nu"
  "mber_type\030\002 \001(\0132\037.infinity_grpc_proto.Nu"
  "mberTypeH\000\0228\n\014varchar_type\030\003 \001(\0132 .infin"
  "ity_grpc_proto.VarcharTypeH\000\022<\n\016embeddin"
  "g_type\030\004 \001(\0132\".infinity_grpc_proto.Embed"
  "dingTypeH\000B\016\n\014PhysicalType\"a\n\rEmbeddingT"
  "ype\022=\n\023embedding_data_type\030\001 \001(\0162 .infin"
  "ity_grpc_proto.ElementType\022\021\n\tdimension\030"
  "\002 \001(\005\"\034\n\013VarcharType\022\r\n\005width\030\001 \001(\005\"\014\n\nN"
  "umberType\"z\n\020DropTableRequest\022\017\n\007db_name"
  "\030\001 \001(\t\022\022\n\ntable_name\030\002 \001(\t\022-\n\007options\030\003 "
  "\001(\0132\034.infinity_grpc_proto.Options\022\022\n\nses"
  "sion_id\030\004 \001(\004\"\212\001\n\rInsertRequest\022\017\n\007db_na"
  "me\030\001 \001(\t\022\022\n\ntable_name\030\002 \001(\t\022\024\n\014column_n"
  "ames\030\003 \003(\t\022*\n\006fields\030\004 \003(\0132\032.infinity_gr"
  "pc_proto.Field\022\022\n\nsession_id\030\005 \001(\004\"=\n\005Fi"
  "eld\0224\n\013parse_exprs\030\001 \003(\0132\037.infinity_grpc"
  "_proto.ParsedExpr\"\336\002\n\rImportRequest\022\017\n\007d"
  "b_name\030\001 \001(\t\022\022\n\ntable_name\030\002 \001(\t\022\021\n\tfile"
  "_path\030\003 \001(\t\022H\n\016import_options\030\004 \001(\01320.in"
  "finity_grpc_proto.ImportRequest.ImportOp"
  "tions\022\022\n\nsession_id\030\005 \001(\004\032\266\001\n\rImportOpti"
  "ons\022\021\n\tdelimiter\030\001 \001(\t\022\021\n\tfile_type\030\002 \001("
  "\t\022\022\n\ntable_name\030\003 \001(\t\022\023\n\013schema_name\030\004 \001"
  "(\t\022\021\n\tcopy_from\030\005 \001(\010\022\022\n\nhas_header\030\006 \001("
  "\010\"/\n\014CopyFileType\022\010\n\004kCSV\020\000\022\t\n\005kJSON\020\001\022\n"
  "\n\006kFVECS\020\002\"\217\002\n\nParsedExpr\022:\n\rconstant_ex"
  "pr\030\002 \001(\0132!.infinity_grpc_proto.ConstantE"
  "xprH\000\0226\n\013column_expr\030\004 \001(\0132\037.infinity_gr"
  "pc_proto.ColumnExprH\000\022:\n\rfunction_expr\030\005"
  " \001(\0132!.infinity_grpc_proto.FunctionExprH"
  "\000\0220\n\010knn_expr\030\014 \001(\0132\034.infinity_grpc_prot"
  "o.KnnExprH\000\022\r\n\005alias\030\001 \001(\tB\020\n\016ParsedExpr"
  "Type\"\321\002\n\014ConstantExpr\022C\n\014literal_type\030\001 "
  "\001(\0162-.infinity_grpc_proto.ConstantExpr.L"
  "iteralType\022\022\n\nbool_value\030\002 \001(\010\022\021\n\ti64_va"
  "lue\030\003 \001(\003\022\021\n\tf64_value\030\004 \001(\001\022\021\n\tstr_valu"
  "e\030\005 \001(\t\022\022\n\ndate_value\030\006 \001(\t\022\022\n\nlong_arra"
  "y\030\007 \003(\003\022\024\n\014double_array\030\010 \003(\001\"q\n\013Literal"
  "Type\022\014\n\010kBoolean\020\000\022\013\n\007kDouble\020\001\022\013\n\007kStri"
  "ng\020\002\022\n\n\006kInt64\020\003\022\t\n\005kNull\020\004\022\021\n\rkIntegerA"
  "rray\020\005\022\020\n\014kDoubleArray\020\006\"Y\n\014FunctionExpr"
  "\022\025\n\rfunction_name\030\001 \001(\t\0222\n\targuments\030\002 \003"
  "(\0132\037.infinity_grpc_proto.ParsedExpr\"/\n\nC"
  "olumnExpr\022\023\n\013column_name\030\001 \003(\t\022\014\n\004star\030\002"
  " \001(\010\"\251\001\n\013BetweenExpr\022.\n\005value\030\001 \001(\0132\037.in"
  "finity_grpc_proto.ParsedExpr\0224\n\013upper_bo"
  "und\030\002 \001(\0132\037.infinity_grpc_proto.ParsedEx"
  "pr\0224\n\013lower_bound\030\003 \001(\0132\037.infinity_grpc_"
  "proto.ParsedExpr\"{\n\006InExpr\022-\n\004left\030\001 \001(\013"
  "2\037.infinity_grpc_proto.ParsedExpr\0222\n\targ"
  "uments\030\002 \003(\0132\037.infinity_grpc_proto.Parse"
  "dExpr\022\016\n\006not_in\030\003 \001(\010\"\311\003\n\007KnnExpr\0224\n\013col"
  "umn_expr\030\001 \001(\0132\037.infinity_grpc_proto.Par"
  "sedExpr\022\026\n\016embedding_data\030\002 \003(\t\022\021\n\tdimen"
  "sion\030\003 \001(\003\022K\n\023embedding_data_type\030\004 \001(\0162"
  "..infinity_grpc_proto.KnnExpr.EmbeddingD"
  "ataType\022C\n\rdistance_type\030\005 \001(\0162,.infinit"
  "y_grpc_proto.KnnExpr.KnnDistanceType\"D\n\017"
  "KnnDistanceType\022\006\n\002L2\020\000\022\n\n\006Cosine\020\001\022\020\n\014I"
  "nnerProduct\020\002\022\013\n\007Hamming\020\003\"\204\001\n\021Embedding"
  "DataType\022\014\n\010ElemBool\020\000\022\017\n\013ElemTinyInt\020\001\022"
  "\020\n\014ElemSmallInt\020\002\022\017\n\013ElemInteger\020\003\022\016\n\nEl"
  "emBigInt\020\004\022\r\n\tElemFloat\020\007\022\016\n\nElemDouble\020"
  "\010\"\216\003\n\017SelectStatement\022\017\n\007db_name\030\001 \001(\t\022\022"
  "\n\ntable_name\030\002 \001(\t\022\022\n\nsession_id\030\t \001(\004\0224"
  "\n\013select_list\030\003 \003(\0132\037.infinity_grpc_prot"
  "o.ParsedExpr\0223\n\nwhere_expr\030\004 \001(\0132\037.infin"
  "ity_grpc_proto.ParsedExpr\0226\n\rgroup_by_li"
  "st\030\005 \003(\0132\037.infinity_grpc_proto.ParsedExp"
  "r\0223\n\nlimit_expr\030\006 \001(\0132\037.infinity_grpc_pr"
  "oto.ParsedExpr\0224\n\013offset_expr\030\007 \001(\0132\037.in"
  "finity_grpc_proto.ParsedExpr\0224\n\013search_e"
  "xpr\030\010 \001(\0132\037.infinity_grpc_proto.ParsedEx"
  "pr\"\'\n\021DisConnectRequest\022\022\n\nsession_id\030\001 "
  "\001(\004\"\007\n\005Empty\"H\n\016CommonResponse\022\017\n\007succes"
  "s\030\001 \001(\010\022\021\n\terror_msg\030\002 \001(\t\022\022\n\nsession_id"
  "\030\003 \001(\004\"\242\001\n\016SelectResponse\022\017\n\007success\030\001 \001"
  "(\010\022\021\n\terror_msg\030\002 \001(\t\0223\n\013column_defs\030\003 \003"
  "(\0132\036.infinity_grpc_proto.ColumnDef\0227\n\rco"
  "lumn_fields\030\004 \003(\0132 .infinity_grpc_proto."
  "ColumnField\"Z\n\013ColumnField\0224\n\013column_typ"
  "e\030\001 \001(\0162\037.infinity_grpc_proto.ColumnType"
  "\022\025\n\rcolumn_vector\030\002 \001(\014\"\340\001\n\tDataBlock\022\021\n"
  "\trow_count\030\001 \001(\005\022\024\n\014column_count\030\002 \001(\005\022\020"
  "\n\010capacity\030\003 \001(\005\022C\n\016column_vectors\030\004 \003(\013"
  "2+.infinity_grpc_proto.DataBlock.ColumnV"
  "ector\032S\n\014ColumnVector\022C\n\016column_vectors\030"
  "\001 \003(\0132+.infinity_grpc_proto.DataBlock.Co"
  "lumnVector\")\n\023ListDatabaseRequest\022\022\n\nses"
  "sion_id\030\001 \001(\004\"L\n\024ListDatabaseResponse\022\020\n"
  "\010db_names\030\001 \003(\t\022\017\n\007success\030\002 \001(\010\022\021\n\terro"
  "r_msg\030\003 \001(\t\">\n\027DescribeDatabaseRequest\022\017"
  "\n\007db_name\030\001 \001(\t\022\022\n\nsession_id\030\002 \001(\004\"d\n\030D"
  "escribeDatabaseResponse\022\017\n\007db_name\030\001 \001(\t"
  "\022\r\n\005db_id\030\002 \001(\005\022\024\n\014num_segments\030\003 \001(\005\022\022\n"
  "\nnum_blocks\030\004 \001(\005\"[\n\020ListTableRequest\022\017\n"
  "\007db_name\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\021\n\terror"
  "_msg\030\003 \001(\t\022\022\n\nsession_id\030\004 \001(\004\"K\n\021ListTa"
  "bleResponse\022\022\n\ntable_name\030\001 \003(\t\022\017\n\007succe"
  "ss\030\002 \001(\010\022\021\n\terror_msg\030\003 \001(\t\";\n\024DescribeT"
  "ableRequest\022\017\n\007db_name\030\001 \001(\t\022\022\n\nsession_"
  "id\030\002 \001(\004\"g\n\025DescribeTableResponse\022\022\n\ntab"
  "le_name\030\001 \001(\t\022\020\n\010table_id\030\002 \001(\005\022\024\n\014num_s"
  "egments\030\003 \001(\005\022\022\n\nnum_blocks\030\004 \001(\005\"9\n\022Get"
  "DatabaseRequest\022\017\n\007db_name\030\001 \001(\t\022\022\n\nsess"
  "ion_id\030\002 \001(\004\"J\n\017GetTableRequest\022\017\n\007db_na"
  "me\030\001 \001(\t\022\022\n\ntable_name\030\002 \001(\t\022\022\n\nsession_"
  "id\030\003 \001(\004\"\370\001\n\022CreateIndexRequest\022\017\n\007db_na"
  "me\030\001 \001(\t\022\022\n\ntable_name\030\002 \001(\t\022\022\n\nindex_na"
  "me\030\003 \001(\t\022\023\n\013method_type\030\004 \001(\t\022\024\n\014column_"
  "names\030\005 \003(\t\022;\n\017index_para_list\030\006 \003(\0132\".i"
  "nfinity_grpc_proto.InitParameter\022-\n\007opti"
  "ons\030\007 \001(\0132\034.infinity_grpc_proto.Options\022"
  "\022\n\nsession_id\030\010 \001(\004\"6\n\rInitParameter\022\021\n\t"
  "para_name\030\001 \001(\t\022\022\n\npara_value\030\002 \001(\t\"_\n\020D"
  "ropIndexRequest\022\017\n\007db_name\030\001 \001(\t\022\022\n\ntabl"
  "e_name\030\002 \001(\t\022\022\n\nindex_name\030\003 \001(\t\022\022\n\nsess"
  "ion_id\030\004 \001(\004*\246\001\n\tLogicType\022\013\n\007Boolean\020\000\022"
  "\013\n\007TinyInt\020\001\022\014\n\010SmallInt\020\002\022\013\n\007Integer\020\003\022"
  "\n\n\006BigInt\020\004\022\013\n\007HugeInt\020\005\022\013\n\007Decimal\020\006\022\t\n"
  "\005Float\020\007\022\n\n\006Double\020\010\022\013\n\007Varchar\020\t\022\r\n\tEmb"
  "edding\020\n\022\013\n\007Invalid\020\013*C\n\nConstraint\022\t\n\005k"
  "Null\020\000\022\014\n\010kNotNull\020\001\022\017\n\013kPrimaryKey\020\002\022\013\n"
  "\007kUnique\020\003*{\n\013ElementType\022\014\n\010kElemBit\020\000\022"
  "\r\n\tkElemInt8\020\002\022\016\n\nkElemInt16\020\003\022\016\n\nkElemI"
  "nt32\020\004\022\016\n\nkElemInt64\020\007\022\016\n\nkElemFloat\020\010\022\017"
  "\n\013kElemDouble\020\t*\307\001\n\nColumnType\022\017\n\013kColum"
  "nBool\020\000\022\017\n\013kColumnInt8\020\001\022\020\n\014kColumnInt16"
  "\020\002\022\020\n\014kColumnInt32\020\003\022\020\n\014kColumnInt64\020\004\022\020"
  "\n\014kColumnFloat\020\005\022\021\n\rkColumnDouble\020\006\022\022\n\016k"
  "ColumnVarchar\020\n\022\024\n\020kColumnEmbedding\020\013\022\022\n"
  "\016kColumnInvalid\020\0142\263\014\n\023InfinityGrpcServic"
  "e\022J\n\007Connect\022\032.infinity_grpc_proto.Empty"
  "\032#.infinity_grpc_proto.CommonResponse\022Y\n"
  "\nDisConnect\022&.infinity_grpc_proto.DisCon"
  "nectRequest\032#.infinity_grpc_proto.Common"
  "Response\022a\n\016CreateDatabase\022*.infinity_gr"
  "pc_proto.CreateDatabaseRequest\032#.infinit"
  "y_grpc_proto.CommonResponse\022]\n\014DropDatab"
  "ase\022(.infinity_grpc_proto.DropDatabaseRe"
  "quest\032#.infinity_grpc_proto.CommonRespon"
  "se\022c\n\014ListDatabase\022(.infinity_grpc_proto"
  ".ListDatabaseRequest\032).infinity_grpc_pro"
  "to.ListDatabaseResponse\022o\n\020DescribeDatab"
  "ase\022,.infinity_grpc_proto.DescribeDataba"
  "seRequest\032-.infinity_grpc_proto.Describe"
  "DatabaseResponse\022[\n\013GetDatabase\022\'.infini"
  "ty_grpc_proto.GetDatabaseRequest\032#.infin"
  "ity_grpc_proto.CommonResponse\022[\n\013CreateT"
  "able\022\'.infinity_grpc_proto.CreateTableRe"
  "quest\032#.infinity_grpc_proto.CommonRespon"
  "se\022W\n\tDropTable\022%.infinity_grpc_proto.Dr"
  "opTableRequest\032#.infinity_grpc_proto.Com"
  "monResponse\022Z\n\tListTable\022%.infinity_grpc"
  "_proto.ListTableRequest\032&.infinity_grpc_"
  "proto.ListTableResponse\022f\n\rDescribeTable"
  "\022).infinity_grpc_proto.DescribeTableRequ"
  "est\032*.infinity_grpc_proto.DescribeTableR"
  "esponse\022U\n\010GetTable\022$.infinity_grpc_prot"
  "o.GetTableRequest\032#.infinity_grpc_proto."
  "CommonResponse\022Q\n\006Insert\022\".infinity_grpc"
  "_proto.InsertRequest\032#.infinity_grpc_pro"
  "to.CommonResponse\022Q\n\006Import\022\".infinity_g"
  "rpc_proto.ImportRequest\032#.infinity_grpc_"
  "proto.CommonResponse\022[\n\013CreateIndex\022\'.in"
  "finity_grpc_proto.CreateIndexRequest\032#.i"
  "nfinity_grpc_proto.CommonResponse\022W\n\tDro"
  "pIndex\022%.infinity_grpc_proto.DropIndexRe"
  "quest\032#.infinity_grpc_proto.CommonRespon"
  "se\022S\n\006Search\022$.infinity_grpc_proto.Selec"
  "tStatement\032#.infinity_grpc_proto.SelectR"
  "esponseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_infinity_5fgrpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_infinity_5fgrpc_2eproto = {
    false, false, 7615, descriptor_table_protodef_infinity_5fgrpc_2eproto,
    "infinity_grpc.proto",
    &descriptor_table_infinity_5fgrpc_2eproto_once, nullptr, 0, 43,
    schemas, file_default_instances, TableStruct_infinity_5fgrpc_2eproto::offsets,
    file_level_metadata_infinity_5fgrpc_2eproto, file_level_enum_descriptors_infinity_5fgrpc_2eproto,
    file_level_service_descriptors_infinity_5fgrpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_infinity_5fgrpc_2eproto_getter() {
  return &descriptor_table_infinity_5fgrpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_infinity_5fgrpc_2eproto(&descriptor_table_infinity_5fgrpc_2eproto);
namespace infinity_grpc_proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImportRequest_ImportOptions_CopyFileType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[0];
}
bool ImportRequest_ImportOptions_CopyFileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ImportRequest_ImportOptions_CopyFileType ImportRequest_ImportOptions::kCSV;
constexpr ImportRequest_ImportOptions_CopyFileType ImportRequest_ImportOptions::kJSON;
constexpr ImportRequest_ImportOptions_CopyFileType ImportRequest_ImportOptions::kFVECS;
constexpr ImportRequest_ImportOptions_CopyFileType ImportRequest_ImportOptions::CopyFileType_MIN;
constexpr ImportRequest_ImportOptions_CopyFileType ImportRequest_ImportOptions::CopyFileType_MAX;
constexpr int ImportRequest_ImportOptions::CopyFileType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConstantExpr_LiteralType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[1];
}
bool ConstantExpr_LiteralType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ConstantExpr_LiteralType ConstantExpr::kBoolean;
constexpr ConstantExpr_LiteralType ConstantExpr::kDouble;
constexpr ConstantExpr_LiteralType ConstantExpr::kString;
constexpr ConstantExpr_LiteralType ConstantExpr::kInt64;
constexpr ConstantExpr_LiteralType ConstantExpr::kNull;
constexpr ConstantExpr_LiteralType ConstantExpr::kIntegerArray;
constexpr ConstantExpr_LiteralType ConstantExpr::kDoubleArray;
constexpr ConstantExpr_LiteralType ConstantExpr::LiteralType_MIN;
constexpr ConstantExpr_LiteralType ConstantExpr::LiteralType_MAX;
constexpr int ConstantExpr::LiteralType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KnnExpr_KnnDistanceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[2];
}
bool KnnExpr_KnnDistanceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr KnnExpr_KnnDistanceType KnnExpr::L2;
constexpr KnnExpr_KnnDistanceType KnnExpr::Cosine;
constexpr KnnExpr_KnnDistanceType KnnExpr::InnerProduct;
constexpr KnnExpr_KnnDistanceType KnnExpr::Hamming;
constexpr KnnExpr_KnnDistanceType KnnExpr::KnnDistanceType_MIN;
constexpr KnnExpr_KnnDistanceType KnnExpr::KnnDistanceType_MAX;
constexpr int KnnExpr::KnnDistanceType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KnnExpr_EmbeddingDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[3];
}
bool KnnExpr_EmbeddingDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemBool;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemTinyInt;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemSmallInt;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemInteger;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemBigInt;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemFloat;
constexpr KnnExpr_EmbeddingDataType KnnExpr::ElemDouble;
constexpr KnnExpr_EmbeddingDataType KnnExpr::EmbeddingDataType_MIN;
constexpr KnnExpr_EmbeddingDataType KnnExpr::EmbeddingDataType_MAX;
constexpr int KnnExpr::EmbeddingDataType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogicType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[4];
}
bool LogicType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Constraint_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[5];
}
bool Constraint_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ElementType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[6];
}
bool ElementType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ColumnType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infinity_5fgrpc_2eproto);
  return file_level_enum_descriptors_infinity_5fgrpc_2eproto[7];
}
bool ColumnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Options::_Internal {
 public:
};

Options::Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.Options)
}
Options::Options(const Options& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Options* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.Options)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Options::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Options::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Options::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[0]);
}

// ===================================================================

class CreateDatabaseRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::Options& options(const CreateDatabaseRequest* msg);
};

const ::infinity_grpc_proto::Options&
CreateDatabaseRequest::_Internal::options(const CreateDatabaseRequest* msg) {
  return *msg->_impl_.options_;
}
CreateDatabaseRequest::CreateDatabaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.CreateDatabaseRequest)
}
CreateDatabaseRequest::CreateDatabaseRequest(const CreateDatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDatabaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::infinity_grpc_proto::Options(*from._impl_.options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.CreateDatabaseRequest)
}

inline void CreateDatabaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateDatabaseRequest::~CreateDatabaseRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.CreateDatabaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDatabaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
}

void CreateDatabaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.CreateDatabaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDatabaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateDatabaseRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.Options options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDatabaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.CreateDatabaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateDatabaseRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // .infinity_grpc_proto.Options options = 2;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.CreateDatabaseRequest)
  return target;
}

size_t CreateDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.CreateDatabaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // .infinity_grpc_proto.Options options = 2;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDatabaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDatabaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDatabaseRequest::GetClassData() const { return &_class_data_; }


void CreateDatabaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDatabaseRequest*>(&to_msg);
  auto& from = static_cast<const CreateDatabaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.CreateDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::infinity_grpc_proto::Options::MergeFrom(
        from._internal_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDatabaseRequest::CopyFrom(const CreateDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.CreateDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDatabaseRequest::IsInitialized() const {
  return true;
}

void CreateDatabaseRequest::InternalSwap(CreateDatabaseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDatabaseRequest, _impl_.session_id_)
      + sizeof(CreateDatabaseRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(CreateDatabaseRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDatabaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[1]);
}

// ===================================================================

class DropDatabaseRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::Options& options(const DropDatabaseRequest* msg);
};

const ::infinity_grpc_proto::Options&
DropDatabaseRequest::_Internal::options(const DropDatabaseRequest* msg) {
  return *msg->_impl_.options_;
}
DropDatabaseRequest::DropDatabaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DropDatabaseRequest)
}
DropDatabaseRequest::DropDatabaseRequest(const DropDatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DropDatabaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::infinity_grpc_proto::Options(*from._impl_.options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DropDatabaseRequest)
}

inline void DropDatabaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DropDatabaseRequest::~DropDatabaseRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DropDatabaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DropDatabaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
}

void DropDatabaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DropDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DropDatabaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropDatabaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropDatabaseRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.Options options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropDatabaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DropDatabaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropDatabaseRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // .infinity_grpc_proto.Options options = 2;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DropDatabaseRequest)
  return target;
}

size_t DropDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DropDatabaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // .infinity_grpc_proto.Options options = 2;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropDatabaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DropDatabaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropDatabaseRequest::GetClassData() const { return &_class_data_; }


void DropDatabaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DropDatabaseRequest*>(&to_msg);
  auto& from = static_cast<const DropDatabaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DropDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::infinity_grpc_proto::Options::MergeFrom(
        from._internal_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropDatabaseRequest::CopyFrom(const DropDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DropDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropDatabaseRequest::IsInitialized() const {
  return true;
}

void DropDatabaseRequest::InternalSwap(DropDatabaseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DropDatabaseRequest, _impl_.session_id_)
      + sizeof(DropDatabaseRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(DropDatabaseRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DropDatabaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[2]);
}

// ===================================================================

class CreateTableRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::Options& options(const CreateTableRequest* msg);
};

const ::infinity_grpc_proto::Options&
CreateTableRequest::_Internal::options(const CreateTableRequest* msg) {
  return *msg->_impl_.options_;
}
CreateTableRequest::CreateTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_defs_){from._impl_.column_defs_}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::infinity_grpc_proto::Options(*from._impl_.options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.CreateTableRequest)
}

inline void CreateTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_defs_){arena}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.CreateTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_defs_.~RepeatedPtrField();
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.CreateTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_defs_.Clear();
  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateTableRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateTableRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_column_defs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.Options options = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.CreateTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateTableRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateTableRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_column_defs_size()); i < n; i++) {
    const auto& repfield = this->_internal_column_defs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.Options options = 5;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 6;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.CreateTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
  total_size += 1UL * this->_internal_column_defs_size();
  for (const auto& msg : this->_impl_.column_defs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // .infinity_grpc_proto.Options options = 5;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // uint64 session_id = 6;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateTableRequest::GetClassData() const { return &_class_data_; }


void CreateTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateTableRequest*>(&to_msg);
  auto& from = static_cast<const CreateTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_defs_.MergeFrom(from._impl_.column_defs_);
  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::infinity_grpc_proto::Options::MergeFrom(
        from._internal_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  return true;
}

void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_defs_.InternalSwap(&other->_impl_.column_defs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.session_id_)
      + sizeof(CreateTableRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[3]);
}

// ===================================================================

class ColumnConstraint::_Internal {
 public:
};

ColumnConstraint::ColumnConstraint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ColumnConstraint)
}
ColumnConstraint::ColumnConstraint(const ColumnConstraint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColumnConstraint* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_){from._impl_.constraint_}
    , /*decltype(_impl_._constraint_cached_byte_size_)*/{0}
    , decltype(_impl_.column_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.column_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.column_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_column_name().empty()) {
    _this->_impl_.column_name_.Set(from._internal_column_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ColumnConstraint)
}

inline void ColumnConstraint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_){arena}
    , /*decltype(_impl_._constraint_cached_byte_size_)*/{0}
    , decltype(_impl_.column_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.column_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.column_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ColumnConstraint::~ColumnConstraint() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ColumnConstraint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColumnConstraint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.constraint_.~RepeatedField();
  _impl_.column_name_.Destroy();
}

void ColumnConstraint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColumnConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ColumnConstraint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.constraint_.Clear();
  _impl_.column_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColumnConstraint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string column_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_column_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ColumnConstraint.column_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.Constraint constraint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_constraint(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_constraint(static_cast<::infinity_grpc_proto::Constraint>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColumnConstraint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ColumnConstraint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string column_name = 1;
  if (!this->_internal_column_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_column_name().data(), static_cast<int>(this->_internal_column_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ColumnConstraint.column_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_column_name(), target);
  }

  // repeated .infinity_grpc_proto.Constraint constraint = 2;
  {
    int byte_size = _impl_._constraint_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, _impl_.constraint_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ColumnConstraint)
  return target;
}

size_t ColumnConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ColumnConstraint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.Constraint constraint = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_constraint_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_constraint(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._constraint_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string column_name = 1;
  if (!this->_internal_column_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_column_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColumnConstraint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColumnConstraint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColumnConstraint::GetClassData() const { return &_class_data_; }


void ColumnConstraint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColumnConstraint*>(&to_msg);
  auto& from = static_cast<const ColumnConstraint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ColumnConstraint)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.constraint_.MergeFrom(from._impl_.constraint_);
  if (!from._internal_column_name().empty()) {
    _this->_internal_set_column_name(from._internal_column_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnConstraint::CopyFrom(const ColumnConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ColumnConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnConstraint::IsInitialized() const {
  return true;
}

void ColumnConstraint::InternalSwap(ColumnConstraint* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.constraint_.InternalSwap(&other->_impl_.constraint_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.column_name_, lhs_arena,
      &other->_impl_.column_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ColumnConstraint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[4]);
}

// ===================================================================

class ColumnDef::_Internal {
 public:
  static const ::infinity_grpc_proto::DataType& column_type(const ColumnDef* msg);
};

const ::infinity_grpc_proto::DataType&
ColumnDef::_Internal::column_type(const ColumnDef* msg) {
  return *msg->_impl_.column_type_;
}
ColumnDef::ColumnDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ColumnDef)
}
ColumnDef::ColumnDef(const ColumnDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColumnDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.constraints_){from._impl_.constraints_}
    , /*decltype(_impl_._constraints_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.column_type_){nullptr}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_column_type()) {
    _this->_impl_.column_type_ = new ::infinity_grpc_proto::DataType(*from._impl_.column_type_);
  }
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ColumnDef)
}

inline void ColumnDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.constraints_){arena}
    , /*decltype(_impl_._constraints_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.column_type_){nullptr}
    , decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ColumnDef::~ColumnDef() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ColumnDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColumnDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.constraints_.~RepeatedField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.column_type_;
}

void ColumnDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColumnDef::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ColumnDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.constraints_.Clear();
  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.column_type_ != nullptr) {
    delete _impl_.column_type_;
  }
  _impl_.column_type_ = nullptr;
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColumnDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ColumnDef.name"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.DataType column_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_column_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.Constraint constraints = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_constraints(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_constraints(static_cast<::infinity_grpc_proto::Constraint>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColumnDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ColumnDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ColumnDef.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .infinity_grpc_proto.DataType column_type = 3;
  if (this->_internal_has_column_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::column_type(this),
        _Internal::column_type(this).GetCachedSize(), target, stream);
  }

  // repeated .infinity_grpc_proto.Constraint constraints = 4;
  {
    int byte_size = _impl_._constraints_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, _impl_.constraints_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ColumnDef)
  return target;
}

size_t ColumnDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ColumnDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.Constraint constraints = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_constraints_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_constraints(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._constraints_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .infinity_grpc_proto.DataType column_type = 3;
  if (this->_internal_has_column_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.column_type_);
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColumnDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColumnDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColumnDef::GetClassData() const { return &_class_data_; }


void ColumnDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColumnDef*>(&to_msg);
  auto& from = static_cast<const ColumnDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ColumnDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.constraints_.MergeFrom(from._impl_.constraints_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_column_type()) {
    _this->_internal_mutable_column_type()->::infinity_grpc_proto::DataType::MergeFrom(
        from._internal_column_type());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnDef::CopyFrom(const ColumnDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ColumnDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnDef::IsInitialized() const {
  return true;
}

void ColumnDef::InternalSwap(ColumnDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.constraints_.InternalSwap(&other->_impl_.constraints_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColumnDef, _impl_.id_)
      + sizeof(ColumnDef::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(ColumnDef, _impl_.column_type_)>(
          reinterpret_cast<char*>(&_impl_.column_type_),
          reinterpret_cast<char*>(&other->_impl_.column_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColumnDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[5]);
}

// ===================================================================

class DataType::_Internal {
 public:
  static const ::infinity_grpc_proto::NumberType& number_type(const DataType* msg);
  static const ::infinity_grpc_proto::VarcharType& varchar_type(const DataType* msg);
  static const ::infinity_grpc_proto::EmbeddingType& embedding_type(const DataType* msg);
};

const ::infinity_grpc_proto::NumberType&
DataType::_Internal::number_type(const DataType* msg) {
  return *msg->_impl_.PhysicalType_.number_type_;
}
const ::infinity_grpc_proto::VarcharType&
DataType::_Internal::varchar_type(const DataType* msg) {
  return *msg->_impl_.PhysicalType_.varchar_type_;
}
const ::infinity_grpc_proto::EmbeddingType&
DataType::_Internal::embedding_type(const DataType* msg) {
  return *msg->_impl_.PhysicalType_.embedding_type_;
}
void DataType::set_allocated_number_type(::infinity_grpc_proto::NumberType* number_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PhysicalType();
  if (number_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(number_type);
    if (message_arena != submessage_arena) {
      number_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number_type, submessage_arena);
    }
    set_has_number_type();
    _impl_.PhysicalType_.number_type_ = number_type;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.DataType.number_type)
}
void DataType::set_allocated_varchar_type(::infinity_grpc_proto::VarcharType* varchar_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PhysicalType();
  if (varchar_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(varchar_type);
    if (message_arena != submessage_arena) {
      varchar_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, varchar_type, submessage_arena);
    }
    set_has_varchar_type();
    _impl_.PhysicalType_.varchar_type_ = varchar_type;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.DataType.varchar_type)
}
void DataType::set_allocated_embedding_type(::infinity_grpc_proto::EmbeddingType* embedding_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PhysicalType();
  if (embedding_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(embedding_type);
    if (message_arena != submessage_arena) {
      embedding_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, embedding_type, submessage_arena);
    }
    set_has_embedding_type();
    _impl_.PhysicalType_.embedding_type_ = embedding_type;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.DataType.embedding_type)
}
DataType::DataType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DataType)
}
DataType::DataType(const DataType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DataType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.logic_type_){}
    , decltype(_impl_.PhysicalType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.logic_type_ = from._impl_.logic_type_;
  clear_has_PhysicalType();
  switch (from.PhysicalType_case()) {
    case kNumberType: {
      _this->_internal_mutable_number_type()->::infinity_grpc_proto::NumberType::MergeFrom(
          from._internal_number_type());
      break;
    }
    case kVarcharType: {
      _this->_internal_mutable_varchar_type()->::infinity_grpc_proto::VarcharType::MergeFrom(
          from._internal_varchar_type());
      break;
    }
    case kEmbeddingType: {
      _this->_internal_mutable_embedding_type()->::infinity_grpc_proto::EmbeddingType::MergeFrom(
          from._internal_embedding_type());
      break;
    }
    case PHYSICALTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DataType)
}

inline void DataType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.logic_type_){0}
    , decltype(_impl_.PhysicalType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_PhysicalType();
}

DataType::~DataType() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DataType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_PhysicalType()) {
    clear_PhysicalType();
  }
}

void DataType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataType::clear_PhysicalType() {
// @@protoc_insertion_point(one_of_clear_start:infinity_grpc_proto.DataType)
  switch (PhysicalType_case()) {
    case kNumberType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PhysicalType_.number_type_;
      }
      break;
    }
    case kVarcharType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PhysicalType_.varchar_type_;
      }
      break;
    }
    case kEmbeddingType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PhysicalType_.embedding_type_;
      }
      break;
    }
    case PHYSICALTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PHYSICALTYPE_NOT_SET;
}


void DataType::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DataType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logic_type_ = 0;
  clear_PhysicalType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.LogicType logic_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_logic_type(static_cast<::infinity_grpc_proto::LogicType>(val));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.NumberType number_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_number_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.VarcharType varchar_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_varchar_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.EmbeddingType embedding_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DataType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.LogicType logic_type = 1;
  if (this->_internal_logic_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_logic_type(), target);
  }

  // .infinity_grpc_proto.NumberType number_type = 2;
  if (_internal_has_number_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::number_type(this),
        _Internal::number_type(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.VarcharType varchar_type = 3;
  if (_internal_has_varchar_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::varchar_type(this),
        _Internal::varchar_type(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.EmbeddingType embedding_type = 4;
  if (_internal_has_embedding_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::embedding_type(this),
        _Internal::embedding_type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DataType)
  return target;
}

size_t DataType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DataType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .infinity_grpc_proto.LogicType logic_type = 1;
  if (this->_internal_logic_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_logic_type());
  }

  switch (PhysicalType_case()) {
    // .infinity_grpc_proto.NumberType number_type = 2;
    case kNumberType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PhysicalType_.number_type_);
      break;
    }
    // .infinity_grpc_proto.VarcharType varchar_type = 3;
    case kVarcharType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PhysicalType_.varchar_type_);
      break;
    }
    // .infinity_grpc_proto.EmbeddingType embedding_type = 4;
    case kEmbeddingType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PhysicalType_.embedding_type_);
      break;
    }
    case PHYSICALTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DataType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataType::GetClassData() const { return &_class_data_; }


void DataType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DataType*>(&to_msg);
  auto& from = static_cast<const DataType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DataType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_logic_type() != 0) {
    _this->_internal_set_logic_type(from._internal_logic_type());
  }
  switch (from.PhysicalType_case()) {
    case kNumberType: {
      _this->_internal_mutable_number_type()->::infinity_grpc_proto::NumberType::MergeFrom(
          from._internal_number_type());
      break;
    }
    case kVarcharType: {
      _this->_internal_mutable_varchar_type()->::infinity_grpc_proto::VarcharType::MergeFrom(
          from._internal_varchar_type());
      break;
    }
    case kEmbeddingType: {
      _this->_internal_mutable_embedding_type()->::infinity_grpc_proto::EmbeddingType::MergeFrom(
          from._internal_embedding_type());
      break;
    }
    case PHYSICALTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataType::CopyFrom(const DataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataType::IsInitialized() const {
  return true;
}

void DataType::InternalSwap(DataType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.logic_type_, other->_impl_.logic_type_);
  swap(_impl_.PhysicalType_, other->_impl_.PhysicalType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[6]);
}

// ===================================================================

class EmbeddingType::_Internal {
 public:
};

EmbeddingType::EmbeddingType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.EmbeddingType)
}
EmbeddingType::EmbeddingType(const EmbeddingType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmbeddingType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.embedding_data_type_){}
    , decltype(_impl_.dimension_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.embedding_data_type_, &from._impl_.embedding_data_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dimension_) -
    reinterpret_cast<char*>(&_impl_.embedding_data_type_)) + sizeof(_impl_.dimension_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.EmbeddingType)
}

inline void EmbeddingType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.embedding_data_type_){0}
    , decltype(_impl_.dimension_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EmbeddingType::~EmbeddingType() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.EmbeddingType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmbeddingType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EmbeddingType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmbeddingType::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.EmbeddingType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.embedding_data_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dimension_) -
      reinterpret_cast<char*>(&_impl_.embedding_data_type_)) + sizeof(_impl_.dimension_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmbeddingType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ElementType embedding_data_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_embedding_data_type(static_cast<::infinity_grpc_proto::ElementType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 dimension = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.dimension_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EmbeddingType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.EmbeddingType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ElementType embedding_data_type = 1;
  if (this->_internal_embedding_data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_embedding_data_type(), target);
  }

  // int32 dimension = 2;
  if (this->_internal_dimension() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_dimension(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.EmbeddingType)
  return target;
}

size_t EmbeddingType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.EmbeddingType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .infinity_grpc_proto.ElementType embedding_data_type = 1;
  if (this->_internal_embedding_data_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_embedding_data_type());
  }

  // int32 dimension = 2;
  if (this->_internal_dimension() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dimension());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmbeddingType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmbeddingType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmbeddingType::GetClassData() const { return &_class_data_; }


void EmbeddingType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmbeddingType*>(&to_msg);
  auto& from = static_cast<const EmbeddingType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.EmbeddingType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_embedding_data_type() != 0) {
    _this->_internal_set_embedding_data_type(from._internal_embedding_data_type());
  }
  if (from._internal_dimension() != 0) {
    _this->_internal_set_dimension(from._internal_dimension());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmbeddingType::CopyFrom(const EmbeddingType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.EmbeddingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddingType::IsInitialized() const {
  return true;
}

void EmbeddingType::InternalSwap(EmbeddingType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmbeddingType, _impl_.dimension_)
      + sizeof(EmbeddingType::_impl_.dimension_)
      - PROTOBUF_FIELD_OFFSET(EmbeddingType, _impl_.embedding_data_type_)>(
          reinterpret_cast<char*>(&_impl_.embedding_data_type_),
          reinterpret_cast<char*>(&other->_impl_.embedding_data_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EmbeddingType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[7]);
}

// ===================================================================

class VarcharType::_Internal {
 public:
};

VarcharType::VarcharType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.VarcharType)
}
VarcharType::VarcharType(const VarcharType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VarcharType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.width_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.width_ = from._impl_.width_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.VarcharType)
}

inline void VarcharType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.width_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VarcharType::~VarcharType() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.VarcharType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VarcharType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VarcharType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VarcharType::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.VarcharType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.width_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VarcharType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 width = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VarcharType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.VarcharType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_width(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.VarcharType)
  return target;
}

size_t VarcharType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.VarcharType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_width());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VarcharType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VarcharType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VarcharType::GetClassData() const { return &_class_data_; }


void VarcharType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VarcharType*>(&to_msg);
  auto& from = static_cast<const VarcharType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.VarcharType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VarcharType::CopyFrom(const VarcharType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.VarcharType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarcharType::IsInitialized() const {
  return true;
}

void VarcharType::InternalSwap(VarcharType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.width_, other->_impl_.width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VarcharType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[8]);
}

// ===================================================================

class NumberType::_Internal {
 public:
};

NumberType::NumberType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.NumberType)
}
NumberType::NumberType(const NumberType& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NumberType* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.NumberType)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NumberType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NumberType::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NumberType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[9]);
}

// ===================================================================

class DropTableRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::Options& options(const DropTableRequest* msg);
};

const ::infinity_grpc_proto::Options&
DropTableRequest::_Internal::options(const DropTableRequest* msg) {
  return *msg->_impl_.options_;
}
DropTableRequest::DropTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DropTableRequest)
}
DropTableRequest::DropTableRequest(const DropTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DropTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::infinity_grpc_proto::Options(*from._impl_.options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DropTableRequest)
}

inline void DropTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DropTableRequest::~DropTableRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DropTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DropTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
}

void DropTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DropTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DropTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropTableRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropTableRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.Options options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DropTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropTableRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropTableRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // .infinity_grpc_proto.Options options = 3;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DropTableRequest)
  return target;
}

size_t DropTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DropTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // .infinity_grpc_proto.Options options = 3;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DropTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropTableRequest::GetClassData() const { return &_class_data_; }


void DropTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DropTableRequest*>(&to_msg);
  auto& from = static_cast<const DropTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DropTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::infinity_grpc_proto::Options::MergeFrom(
        from._internal_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropTableRequest::CopyFrom(const DropTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DropTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropTableRequest::IsInitialized() const {
  return true;
}

void DropTableRequest::InternalSwap(DropTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DropTableRequest, _impl_.session_id_)
      + sizeof(DropTableRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(DropTableRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DropTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[10]);
}

// ===================================================================

class InsertRequest::_Internal {
 public:
};

InsertRequest::InsertRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.InsertRequest)
}
InsertRequest::InsertRequest(const InsertRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InsertRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_names_){from._impl_.column_names_}
    , decltype(_impl_.fields_){from._impl_.fields_}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.InsertRequest)
}

inline void InsertRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_names_){arena}
    , decltype(_impl_.fields_){arena}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InsertRequest::~InsertRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.InsertRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InsertRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_names_.~RepeatedPtrField();
  _impl_.fields_.~RepeatedPtrField();
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
}

void InsertRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.InsertRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_names_.Clear();
  _impl_.fields_.Clear();
  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsertRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.InsertRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.InsertRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string column_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_column_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.InsertRequest.column_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.Field fields = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InsertRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.InsertRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.InsertRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.InsertRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // repeated string column_names = 3;
  for (int i = 0, n = this->_internal_column_names_size(); i < n; i++) {
    const auto& s = this->_internal_column_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.InsertRequest.column_names");
    target = stream->WriteString(3, s, target);
  }

  // repeated .infinity_grpc_proto.Field fields = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint64 session_id = 5;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.InsertRequest)
  return target;
}

size_t InsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.InsertRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string column_names = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.column_names_.size());
  for (int i = 0, n = _impl_.column_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.column_names_.Get(i));
  }

  // repeated .infinity_grpc_proto.Field fields = 4;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_impl_.fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // uint64 session_id = 5;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InsertRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InsertRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InsertRequest::GetClassData() const { return &_class_data_; }


void InsertRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InsertRequest*>(&to_msg);
  auto& from = static_cast<const InsertRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.InsertRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_names_.MergeFrom(from._impl_.column_names_);
  _this->_impl_.fields_.MergeFrom(from._impl_.fields_);
  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InsertRequest::CopyFrom(const InsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.InsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertRequest::IsInitialized() const {
  return true;
}

void InsertRequest::InternalSwap(InsertRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_names_.InternalSwap(&other->_impl_.column_names_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsertRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[11]);
}

// ===================================================================

class Field::_Internal {
 public:
};

Field::Field(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.Field)
}
Field::Field(const Field& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Field* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parse_exprs_){from._impl_.parse_exprs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.Field)
}

inline void Field::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parse_exprs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.Field)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Field::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parse_exprs_.~RepeatedPtrField();
}

void Field::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.Field)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parse_exprs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Field::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .infinity_grpc_proto.ParsedExpr parse_exprs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parse_exprs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Field::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.Field)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ParsedExpr parse_exprs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parse_exprs_size()); i < n; i++) {
    const auto& repfield = this->_internal_parse_exprs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.Field)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ParsedExpr parse_exprs = 1;
  total_size += 1UL * this->_internal_parse_exprs_size();
  for (const auto& msg : this->_impl_.parse_exprs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Field::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Field::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Field::GetClassData() const { return &_class_data_; }


void Field::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Field*>(&to_msg);
  auto& from = static_cast<const Field&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.Field)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parse_exprs_.MergeFrom(from._impl_.parse_exprs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::InternalSwap(Field* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parse_exprs_.InternalSwap(&other->_impl_.parse_exprs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Field::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[12]);
}

// ===================================================================

class ImportRequest_ImportOptions::_Internal {
 public:
};

ImportRequest_ImportOptions::ImportRequest_ImportOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ImportRequest.ImportOptions)
}
ImportRequest_ImportOptions::ImportRequest_ImportOptions(const ImportRequest_ImportOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ImportRequest_ImportOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delimiter_){}
    , decltype(_impl_.file_type_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.schema_name_){}
    , decltype(_impl_.copy_from_){}
    , decltype(_impl_.has_header_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delimiter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.delimiter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delimiter().empty()) {
    _this->_impl_.delimiter_.Set(from._internal_delimiter(), 
      _this->GetArenaForAllocation());
  }
  _impl_.file_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_type().empty()) {
    _this->_impl_.file_type_.Set(from._internal_file_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.schema_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.schema_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_schema_name().empty()) {
    _this->_impl_.schema_name_.Set(from._internal_schema_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.copy_from_, &from._impl_.copy_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.has_header_) -
    reinterpret_cast<char*>(&_impl_.copy_from_)) + sizeof(_impl_.has_header_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ImportRequest.ImportOptions)
}

inline void ImportRequest_ImportOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.delimiter_){}
    , decltype(_impl_.file_type_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.schema_name_){}
    , decltype(_impl_.copy_from_){false}
    , decltype(_impl_.has_header_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delimiter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.delimiter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.file_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.schema_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.schema_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ImportRequest_ImportOptions::~ImportRequest_ImportOptions() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ImportRequest.ImportOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImportRequest_ImportOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delimiter_.Destroy();
  _impl_.file_type_.Destroy();
  _impl_.table_name_.Destroy();
  _impl_.schema_name_.Destroy();
}

void ImportRequest_ImportOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ImportRequest_ImportOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ImportRequest.ImportOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delimiter_.ClearToEmpty();
  _impl_.file_type_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.schema_name_.ClearToEmpty();
  ::memset(&_impl_.copy_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.has_header_) -
      reinterpret_cast<char*>(&_impl_.copy_from_)) + sizeof(_impl_.has_header_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImportRequest_ImportOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delimiter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delimiter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.ImportOptions.delimiter"));
        } else
          goto handle_unusual;
        continue;
      // string file_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.ImportOptions.file_type"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.ImportOptions.table_name"));
        } else
          goto handle_unusual;
        continue;
      // string schema_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_schema_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.ImportOptions.schema_name"));
        } else
          goto handle_unusual;
        continue;
      // bool copy_from = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.copy_from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool has_header = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.has_header_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImportRequest_ImportOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ImportRequest.ImportOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delimiter = 1;
  if (!this->_internal_delimiter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delimiter().data(), static_cast<int>(this->_internal_delimiter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.ImportOptions.delimiter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delimiter(), target);
  }

  // string file_type = 2;
  if (!this->_internal_file_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_type().data(), static_cast<int>(this->_internal_file_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.ImportOptions.file_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_type(), target);
  }

  // string table_name = 3;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.ImportOptions.table_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_table_name(), target);
  }

  // string schema_name = 4;
  if (!this->_internal_schema_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_name().data(), static_cast<int>(this->_internal_schema_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.ImportOptions.schema_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_schema_name(), target);
  }

  // bool copy_from = 5;
  if (this->_internal_copy_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_copy_from(), target);
  }

  // bool has_header = 6;
  if (this->_internal_has_header() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_has_header(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ImportRequest.ImportOptions)
  return target;
}

size_t ImportRequest_ImportOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ImportRequest.ImportOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delimiter = 1;
  if (!this->_internal_delimiter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delimiter());
  }

  // string file_type = 2;
  if (!this->_internal_file_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_type());
  }

  // string table_name = 3;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // string schema_name = 4;
  if (!this->_internal_schema_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_name());
  }

  // bool copy_from = 5;
  if (this->_internal_copy_from() != 0) {
    total_size += 1 + 1;
  }

  // bool has_header = 6;
  if (this->_internal_has_header() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImportRequest_ImportOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ImportRequest_ImportOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImportRequest_ImportOptions::GetClassData() const { return &_class_data_; }


void ImportRequest_ImportOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ImportRequest_ImportOptions*>(&to_msg);
  auto& from = static_cast<const ImportRequest_ImportOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ImportRequest.ImportOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delimiter().empty()) {
    _this->_internal_set_delimiter(from._internal_delimiter());
  }
  if (!from._internal_file_type().empty()) {
    _this->_internal_set_file_type(from._internal_file_type());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (!from._internal_schema_name().empty()) {
    _this->_internal_set_schema_name(from._internal_schema_name());
  }
  if (from._internal_copy_from() != 0) {
    _this->_internal_set_copy_from(from._internal_copy_from());
  }
  if (from._internal_has_header() != 0) {
    _this->_internal_set_has_header(from._internal_has_header());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImportRequest_ImportOptions::CopyFrom(const ImportRequest_ImportOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ImportRequest.ImportOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportRequest_ImportOptions::IsInitialized() const {
  return true;
}

void ImportRequest_ImportOptions::InternalSwap(ImportRequest_ImportOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.delimiter_, lhs_arena,
      &other->_impl_.delimiter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_type_, lhs_arena,
      &other->_impl_.file_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.schema_name_, lhs_arena,
      &other->_impl_.schema_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportRequest_ImportOptions, _impl_.has_header_)
      + sizeof(ImportRequest_ImportOptions::_impl_.has_header_)
      - PROTOBUF_FIELD_OFFSET(ImportRequest_ImportOptions, _impl_.copy_from_)>(
          reinterpret_cast<char*>(&_impl_.copy_from_),
          reinterpret_cast<char*>(&other->_impl_.copy_from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImportRequest_ImportOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[13]);
}

// ===================================================================

class ImportRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::ImportRequest_ImportOptions& import_options(const ImportRequest* msg);
};

const ::infinity_grpc_proto::ImportRequest_ImportOptions&
ImportRequest::_Internal::import_options(const ImportRequest* msg) {
  return *msg->_impl_.import_options_;
}
ImportRequest::ImportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ImportRequest)
}
ImportRequest::ImportRequest(const ImportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ImportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.file_path_){}
    , decltype(_impl_.import_options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_import_options()) {
    _this->_impl_.import_options_ = new ::infinity_grpc_proto::ImportRequest_ImportOptions(*from._impl_.import_options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ImportRequest)
}

inline void ImportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.file_path_){}
    , decltype(_impl_.import_options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ImportRequest::~ImportRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ImportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  _impl_.file_path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.import_options_;
}

void ImportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ImportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ImportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.file_path_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.import_options_ != nullptr) {
    delete _impl_.import_options_;
  }
  _impl_.import_options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // string file_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ImportRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ImportRequest.ImportOptions import_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_import_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ImportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // string file_path = 3;
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ImportRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_file_path(), target);
  }

  // .infinity_grpc_proto.ImportRequest.ImportOptions import_options = 4;
  if (this->_internal_has_import_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::import_options(this),
        _Internal::import_options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 5;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ImportRequest)
  return target;
}

size_t ImportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ImportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // string file_path = 3;
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  // .infinity_grpc_proto.ImportRequest.ImportOptions import_options = 4;
  if (this->_internal_has_import_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.import_options_);
  }

  // uint64 session_id = 5;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ImportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImportRequest::GetClassData() const { return &_class_data_; }


void ImportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ImportRequest*>(&to_msg);
  auto& from = static_cast<const ImportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ImportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  if (from._internal_has_import_options()) {
    _this->_internal_mutable_import_options()->::infinity_grpc_proto::ImportRequest_ImportOptions::MergeFrom(
        from._internal_import_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImportRequest::CopyFrom(const ImportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ImportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportRequest::IsInitialized() const {
  return true;
}

void ImportRequest::InternalSwap(ImportRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportRequest, _impl_.session_id_)
      + sizeof(ImportRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(ImportRequest, _impl_.import_options_)>(
          reinterpret_cast<char*>(&_impl_.import_options_),
          reinterpret_cast<char*>(&other->_impl_.import_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[14]);
}

// ===================================================================

class ParsedExpr::_Internal {
 public:
  static const ::infinity_grpc_proto::ConstantExpr& constant_expr(const ParsedExpr* msg);
  static const ::infinity_grpc_proto::ColumnExpr& column_expr(const ParsedExpr* msg);
  static const ::infinity_grpc_proto::FunctionExpr& function_expr(const ParsedExpr* msg);
  static const ::infinity_grpc_proto::KnnExpr& knn_expr(const ParsedExpr* msg);
};

const ::infinity_grpc_proto::ConstantExpr&
ParsedExpr::_Internal::constant_expr(const ParsedExpr* msg) {
  return *msg->_impl_.ParsedExprType_.constant_expr_;
}
const ::infinity_grpc_proto::ColumnExpr&
ParsedExpr::_Internal::column_expr(const ParsedExpr* msg) {
  return *msg->_impl_.ParsedExprType_.column_expr_;
}
const ::infinity_grpc_proto::FunctionExpr&
ParsedExpr::_Internal::function_expr(const ParsedExpr* msg) {
  return *msg->_impl_.ParsedExprType_.function_expr_;
}
const ::infinity_grpc_proto::KnnExpr&
ParsedExpr::_Internal::knn_expr(const ParsedExpr* msg) {
  return *msg->_impl_.ParsedExprType_.knn_expr_;
}
void ParsedExpr::set_allocated_constant_expr(::infinity_grpc_proto::ConstantExpr* constant_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ParsedExprType();
  if (constant_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(constant_expr);
    if (message_arena != submessage_arena) {
      constant_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant_expr, submessage_arena);
    }
    set_has_constant_expr();
    _impl_.ParsedExprType_.constant_expr_ = constant_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.ParsedExpr.constant_expr)
}
void ParsedExpr::set_allocated_column_expr(::infinity_grpc_proto::ColumnExpr* column_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ParsedExprType();
  if (column_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(column_expr);
    if (message_arena != submessage_arena) {
      column_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, column_expr, submessage_arena);
    }
    set_has_column_expr();
    _impl_.ParsedExprType_.column_expr_ = column_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.ParsedExpr.column_expr)
}
void ParsedExpr::set_allocated_function_expr(::infinity_grpc_proto::FunctionExpr* function_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ParsedExprType();
  if (function_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(function_expr);
    if (message_arena != submessage_arena) {
      function_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, function_expr, submessage_arena);
    }
    set_has_function_expr();
    _impl_.ParsedExprType_.function_expr_ = function_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.ParsedExpr.function_expr)
}
void ParsedExpr::set_allocated_knn_expr(::infinity_grpc_proto::KnnExpr* knn_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ParsedExprType();
  if (knn_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(knn_expr);
    if (message_arena != submessage_arena) {
      knn_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, knn_expr, submessage_arena);
    }
    set_has_knn_expr();
    _impl_.ParsedExprType_.knn_expr_ = knn_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:infinity_grpc_proto.ParsedExpr.knn_expr)
}
ParsedExpr::ParsedExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ParsedExpr)
}
ParsedExpr::ParsedExpr(const ParsedExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParsedExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.alias_){}
    , decltype(_impl_.ParsedExprType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.alias_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.alias_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_alias().empty()) {
    _this->_impl_.alias_.Set(from._internal_alias(), 
      _this->GetArenaForAllocation());
  }
  clear_has_ParsedExprType();
  switch (from.ParsedExprType_case()) {
    case kConstantExpr: {
      _this->_internal_mutable_constant_expr()->::infinity_grpc_proto::ConstantExpr::MergeFrom(
          from._internal_constant_expr());
      break;
    }
    case kColumnExpr: {
      _this->_internal_mutable_column_expr()->::infinity_grpc_proto::ColumnExpr::MergeFrom(
          from._internal_column_expr());
      break;
    }
    case kFunctionExpr: {
      _this->_internal_mutable_function_expr()->::infinity_grpc_proto::FunctionExpr::MergeFrom(
          from._internal_function_expr());
      break;
    }
    case kKnnExpr: {
      _this->_internal_mutable_knn_expr()->::infinity_grpc_proto::KnnExpr::MergeFrom(
          from._internal_knn_expr());
      break;
    }
    case PARSEDEXPRTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ParsedExpr)
}

inline void ParsedExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.alias_){}
    , decltype(_impl_.ParsedExprType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.alias_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.alias_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_ParsedExprType();
}

ParsedExpr::~ParsedExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ParsedExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParsedExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.alias_.Destroy();
  if (has_ParsedExprType()) {
    clear_ParsedExprType();
  }
}

void ParsedExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParsedExpr::clear_ParsedExprType() {
// @@protoc_insertion_point(one_of_clear_start:infinity_grpc_proto.ParsedExpr)
  switch (ParsedExprType_case()) {
    case kConstantExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ParsedExprType_.constant_expr_;
      }
      break;
    }
    case kColumnExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ParsedExprType_.column_expr_;
      }
      break;
    }
    case kFunctionExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ParsedExprType_.function_expr_;
      }
      break;
    }
    case kKnnExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ParsedExprType_.knn_expr_;
      }
      break;
    }
    case PARSEDEXPRTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PARSEDEXPRTYPE_NOT_SET;
}


void ParsedExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ParsedExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alias_.ClearToEmpty();
  clear_ParsedExprType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParsedExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string alias = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_alias();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ParsedExpr.alias"));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ConstantExpr constant_expr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constant_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ColumnExpr column_expr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_column_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.FunctionExpr function_expr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.KnnExpr knn_expr = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_knn_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParsedExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ParsedExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string alias = 1;
  if (!this->_internal_alias().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ParsedExpr.alias");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_alias(), target);
  }

  // .infinity_grpc_proto.ConstantExpr constant_expr = 2;
  if (_internal_has_constant_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::constant_expr(this),
        _Internal::constant_expr(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ColumnExpr column_expr = 4;
  if (_internal_has_column_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::column_expr(this),
        _Internal::column_expr(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.FunctionExpr function_expr = 5;
  if (_internal_has_function_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::function_expr(this),
        _Internal::function_expr(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.KnnExpr knn_expr = 12;
  if (_internal_has_knn_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::knn_expr(this),
        _Internal::knn_expr(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ParsedExpr)
  return target;
}

size_t ParsedExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ParsedExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string alias = 1;
  if (!this->_internal_alias().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  switch (ParsedExprType_case()) {
    // .infinity_grpc_proto.ConstantExpr constant_expr = 2;
    case kConstantExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ParsedExprType_.constant_expr_);
      break;
    }
    // .infinity_grpc_proto.ColumnExpr column_expr = 4;
    case kColumnExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ParsedExprType_.column_expr_);
      break;
    }
    // .infinity_grpc_proto.FunctionExpr function_expr = 5;
    case kFunctionExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ParsedExprType_.function_expr_);
      break;
    }
    // .infinity_grpc_proto.KnnExpr knn_expr = 12;
    case kKnnExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ParsedExprType_.knn_expr_);
      break;
    }
    case PARSEDEXPRTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParsedExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParsedExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParsedExpr::GetClassData() const { return &_class_data_; }


void ParsedExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParsedExpr*>(&to_msg);
  auto& from = static_cast<const ParsedExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ParsedExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_alias().empty()) {
    _this->_internal_set_alias(from._internal_alias());
  }
  switch (from.ParsedExprType_case()) {
    case kConstantExpr: {
      _this->_internal_mutable_constant_expr()->::infinity_grpc_proto::ConstantExpr::MergeFrom(
          from._internal_constant_expr());
      break;
    }
    case kColumnExpr: {
      _this->_internal_mutable_column_expr()->::infinity_grpc_proto::ColumnExpr::MergeFrom(
          from._internal_column_expr());
      break;
    }
    case kFunctionExpr: {
      _this->_internal_mutable_function_expr()->::infinity_grpc_proto::FunctionExpr::MergeFrom(
          from._internal_function_expr());
      break;
    }
    case kKnnExpr: {
      _this->_internal_mutable_knn_expr()->::infinity_grpc_proto::KnnExpr::MergeFrom(
          from._internal_knn_expr());
      break;
    }
    case PARSEDEXPRTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParsedExpr::CopyFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ParsedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParsedExpr::IsInitialized() const {
  return true;
}

void ParsedExpr::InternalSwap(ParsedExpr* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.alias_, lhs_arena,
      &other->_impl_.alias_, rhs_arena
  );
  swap(_impl_.ParsedExprType_, other->_impl_.ParsedExprType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParsedExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[15]);
}

// ===================================================================

class ConstantExpr::_Internal {
 public:
};

ConstantExpr::ConstantExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ConstantExpr)
}
ConstantExpr::ConstantExpr(const ConstantExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConstantExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.long_array_){from._impl_.long_array_}
    , /*decltype(_impl_._long_array_cached_byte_size_)*/{0}
    , decltype(_impl_.double_array_){from._impl_.double_array_}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.date_value_){}
    , decltype(_impl_.literal_type_){}
    , decltype(_impl_.bool_value_){}
    , decltype(_impl_.i64_value_){}
    , decltype(_impl_.f64_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_str_value().empty()) {
    _this->_impl_.str_value_.Set(from._internal_str_value(), 
      _this->GetArenaForAllocation());
  }
  _impl_.date_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.date_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_date_value().empty()) {
    _this->_impl_.date_value_.Set(from._internal_date_value(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.literal_type_, &from._impl_.literal_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.f64_value_) -
    reinterpret_cast<char*>(&_impl_.literal_type_)) + sizeof(_impl_.f64_value_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ConstantExpr)
}

inline void ConstantExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.long_array_){arena}
    , /*decltype(_impl_._long_array_cached_byte_size_)*/{0}
    , decltype(_impl_.double_array_){arena}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.date_value_){}
    , decltype(_impl_.literal_type_){0}
    , decltype(_impl_.bool_value_){false}
    , decltype(_impl_.i64_value_){int64_t{0}}
    , decltype(_impl_.f64_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.date_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.date_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConstantExpr::~ConstantExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ConstantExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConstantExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.long_array_.~RepeatedField();
  _impl_.double_array_.~RepeatedField();
  _impl_.str_value_.Destroy();
  _impl_.date_value_.Destroy();
}

void ConstantExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConstantExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ConstantExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.long_array_.Clear();
  _impl_.double_array_.Clear();
  _impl_.str_value_.ClearToEmpty();
  _impl_.date_value_.ClearToEmpty();
  ::memset(&_impl_.literal_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.f64_value_) -
      reinterpret_cast<char*>(&_impl_.literal_type_)) + sizeof(_impl_.f64_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstantExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ConstantExpr.LiteralType literal_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_literal_type(static_cast<::infinity_grpc_proto::ConstantExpr_LiteralType>(val));
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.bool_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 i64_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.i64_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double f64_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.f64_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string str_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_str_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ConstantExpr.str_value"));
        } else
          goto handle_unusual;
        continue;
      // string date_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_date_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ConstantExpr.date_value"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 long_array = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_long_array(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 56) {
          _internal_add_long_array(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated double double_array = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_double_array(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 65) {
          _internal_add_double_array(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstantExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ConstantExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ConstantExpr.LiteralType literal_type = 1;
  if (this->_internal_literal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_literal_type(), target);
  }

  // bool bool_value = 2;
  if (this->_internal_bool_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_bool_value(), target);
  }

  // int64 i64_value = 3;
  if (this->_internal_i64_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_i64_value(), target);
  }

  // double f64_value = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_f64_value = this->_internal_f64_value();
  uint64_t raw_f64_value;
  memcpy(&raw_f64_value, &tmp_f64_value, sizeof(tmp_f64_value));
  if (raw_f64_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_f64_value(), target);
  }

  // string str_value = 5;
  if (!this->_internal_str_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str_value().data(), static_cast<int>(this->_internal_str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ConstantExpr.str_value");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_str_value(), target);
  }

  // string date_value = 6;
  if (!this->_internal_date_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_date_value().data(), static_cast<int>(this->_internal_date_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ConstantExpr.date_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_date_value(), target);
  }

  // repeated int64 long_array = 7;
  {
    int byte_size = _impl_._long_array_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          7, _internal_long_array(), byte_size, target);
    }
  }

  // repeated double double_array = 8;
  if (this->_internal_double_array_size() > 0) {
    target = stream->WriteFixedPacked(8, _internal_double_array(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ConstantExpr)
  return target;
}

size_t ConstantExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ConstantExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 long_array = 7;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.long_array_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._long_array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double double_array = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_double_array_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // string str_value = 5;
  if (!this->_internal_str_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_str_value());
  }

  // string date_value = 6;
  if (!this->_internal_date_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_date_value());
  }

  // .infinity_grpc_proto.ConstantExpr.LiteralType literal_type = 1;
  if (this->_internal_literal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_literal_type());
  }

  // bool bool_value = 2;
  if (this->_internal_bool_value() != 0) {
    total_size += 1 + 1;
  }

  // int64 i64_value = 3;
  if (this->_internal_i64_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_i64_value());
  }

  // double f64_value = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_f64_value = this->_internal_f64_value();
  uint64_t raw_f64_value;
  memcpy(&raw_f64_value, &tmp_f64_value, sizeof(tmp_f64_value));
  if (raw_f64_value != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstantExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConstantExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstantExpr::GetClassData() const { return &_class_data_; }


void ConstantExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConstantExpr*>(&to_msg);
  auto& from = static_cast<const ConstantExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ConstantExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.long_array_.MergeFrom(from._impl_.long_array_);
  _this->_impl_.double_array_.MergeFrom(from._impl_.double_array_);
  if (!from._internal_str_value().empty()) {
    _this->_internal_set_str_value(from._internal_str_value());
  }
  if (!from._internal_date_value().empty()) {
    _this->_internal_set_date_value(from._internal_date_value());
  }
  if (from._internal_literal_type() != 0) {
    _this->_internal_set_literal_type(from._internal_literal_type());
  }
  if (from._internal_bool_value() != 0) {
    _this->_internal_set_bool_value(from._internal_bool_value());
  }
  if (from._internal_i64_value() != 0) {
    _this->_internal_set_i64_value(from._internal_i64_value());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_f64_value = from._internal_f64_value();
  uint64_t raw_f64_value;
  memcpy(&raw_f64_value, &tmp_f64_value, sizeof(tmp_f64_value));
  if (raw_f64_value != 0) {
    _this->_internal_set_f64_value(from._internal_f64_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstantExpr::CopyFrom(const ConstantExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ConstantExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstantExpr::IsInitialized() const {
  return true;
}

void ConstantExpr::InternalSwap(ConstantExpr* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.long_array_.InternalSwap(&other->_impl_.long_array_);
  _impl_.double_array_.InternalSwap(&other->_impl_.double_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.str_value_, lhs_arena,
      &other->_impl_.str_value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.date_value_, lhs_arena,
      &other->_impl_.date_value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstantExpr, _impl_.f64_value_)
      + sizeof(ConstantExpr::_impl_.f64_value_)
      - PROTOBUF_FIELD_OFFSET(ConstantExpr, _impl_.literal_type_)>(
          reinterpret_cast<char*>(&_impl_.literal_type_),
          reinterpret_cast<char*>(&other->_impl_.literal_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstantExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[16]);
}

// ===================================================================

class FunctionExpr::_Internal {
 public:
};

FunctionExpr::FunctionExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.FunctionExpr)
}
FunctionExpr::FunctionExpr(const FunctionExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.function_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function_name().empty()) {
    _this->_impl_.function_name_.Set(from._internal_function_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.FunctionExpr)
}

inline void FunctionExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.function_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FunctionExpr::~FunctionExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.FunctionExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  _impl_.function_name_.Destroy();
}

void FunctionExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.FunctionExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.function_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_function_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.FunctionExpr.function_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.FunctionExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (!this->_internal_function_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_name().data(), static_cast<int>(this->_internal_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.FunctionExpr.function_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function_name(), target);
  }

  // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.FunctionExpr)
  return target;
}

size_t FunctionExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.FunctionExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function_name = 1;
  if (!this->_internal_function_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionExpr::GetClassData() const { return &_class_data_; }


void FunctionExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionExpr*>(&to_msg);
  auto& from = static_cast<const FunctionExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.FunctionExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  if (!from._internal_function_name().empty()) {
    _this->_internal_set_function_name(from._internal_function_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionExpr::CopyFrom(const FunctionExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.FunctionExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionExpr::IsInitialized() const {
  return true;
}

void FunctionExpr::InternalSwap(FunctionExpr* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_name_, lhs_arena,
      &other->_impl_.function_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[17]);
}

// ===================================================================

class ColumnExpr::_Internal {
 public:
};

ColumnExpr::ColumnExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ColumnExpr)
}
ColumnExpr::ColumnExpr(const ColumnExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColumnExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_name_){from._impl_.column_name_}
    , decltype(_impl_.star_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.star_ = from._impl_.star_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ColumnExpr)
}

inline void ColumnExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_name_){arena}
    , decltype(_impl_.star_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ColumnExpr::~ColumnExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ColumnExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColumnExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_name_.~RepeatedPtrField();
}

void ColumnExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColumnExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ColumnExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_name_.Clear();
  _impl_.star_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColumnExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string column_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_column_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ColumnExpr.column_name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool star = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColumnExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ColumnExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string column_name = 1;
  for (int i = 0, n = this->_internal_column_name_size(); i < n; i++) {
    const auto& s = this->_internal_column_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ColumnExpr.column_name");
    target = stream->WriteString(1, s, target);
  }

  // bool star = 2;
  if (this->_internal_star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_star(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ColumnExpr)
  return target;
}

size_t ColumnExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ColumnExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string column_name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.column_name_.size());
  for (int i = 0, n = _impl_.column_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.column_name_.Get(i));
  }

  // bool star = 2;
  if (this->_internal_star() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColumnExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColumnExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColumnExpr::GetClassData() const { return &_class_data_; }


void ColumnExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColumnExpr*>(&to_msg);
  auto& from = static_cast<const ColumnExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ColumnExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_name_.MergeFrom(from._impl_.column_name_);
  if (from._internal_star() != 0) {
    _this->_internal_set_star(from._internal_star());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnExpr::CopyFrom(const ColumnExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ColumnExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnExpr::IsInitialized() const {
  return true;
}

void ColumnExpr::InternalSwap(ColumnExpr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_name_.InternalSwap(&other->_impl_.column_name_);
  swap(_impl_.star_, other->_impl_.star_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ColumnExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[18]);
}

// ===================================================================

class BetweenExpr::_Internal {
 public:
  static const ::infinity_grpc_proto::ParsedExpr& value(const BetweenExpr* msg);
  static const ::infinity_grpc_proto::ParsedExpr& upper_bound(const BetweenExpr* msg);
  static const ::infinity_grpc_proto::ParsedExpr& lower_bound(const BetweenExpr* msg);
};

const ::infinity_grpc_proto::ParsedExpr&
BetweenExpr::_Internal::value(const BetweenExpr* msg) {
  return *msg->_impl_.value_;
}
const ::infinity_grpc_proto::ParsedExpr&
BetweenExpr::_Internal::upper_bound(const BetweenExpr* msg) {
  return *msg->_impl_.upper_bound_;
}
const ::infinity_grpc_proto::ParsedExpr&
BetweenExpr::_Internal::lower_bound(const BetweenExpr* msg) {
  return *msg->_impl_.lower_bound_;
}
BetweenExpr::BetweenExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.BetweenExpr)
}
BetweenExpr::BetweenExpr(const BetweenExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BetweenExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , decltype(_impl_.upper_bound_){nullptr}
    , decltype(_impl_.lower_bound_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.value_);
  }
  if (from._internal_has_upper_bound()) {
    _this->_impl_.upper_bound_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.upper_bound_);
  }
  if (from._internal_has_lower_bound()) {
    _this->_impl_.lower_bound_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.lower_bound_);
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.BetweenExpr)
}

inline void BetweenExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , decltype(_impl_.upper_bound_){nullptr}
    , decltype(_impl_.lower_bound_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BetweenExpr::~BetweenExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.BetweenExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BetweenExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.value_;
  if (this != internal_default_instance()) delete _impl_.upper_bound_;
  if (this != internal_default_instance()) delete _impl_.lower_bound_;
}

void BetweenExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BetweenExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.BetweenExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.upper_bound_ != nullptr) {
    delete _impl_.upper_bound_;
  }
  _impl_.upper_bound_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lower_bound_ != nullptr) {
    delete _impl_.lower_bound_;
  }
  _impl_.lower_bound_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BetweenExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ParsedExpr value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr upper_bound = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_upper_bound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr lower_bound = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lower_bound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BetweenExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.BetweenExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ParsedExpr value = 1;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr upper_bound = 2;
  if (this->_internal_has_upper_bound()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::upper_bound(this),
        _Internal::upper_bound(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr lower_bound = 3;
  if (this->_internal_has_lower_bound()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::lower_bound(this),
        _Internal::lower_bound(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.BetweenExpr)
  return target;
}

size_t BetweenExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.BetweenExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .infinity_grpc_proto.ParsedExpr value = 1;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // .infinity_grpc_proto.ParsedExpr upper_bound = 2;
  if (this->_internal_has_upper_bound()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.upper_bound_);
  }

  // .infinity_grpc_proto.ParsedExpr lower_bound = 3;
  if (this->_internal_has_lower_bound()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lower_bound_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BetweenExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BetweenExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BetweenExpr::GetClassData() const { return &_class_data_; }


void BetweenExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BetweenExpr*>(&to_msg);
  auto& from = static_cast<const BetweenExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.BetweenExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_value());
  }
  if (from._internal_has_upper_bound()) {
    _this->_internal_mutable_upper_bound()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_upper_bound());
  }
  if (from._internal_has_lower_bound()) {
    _this->_internal_mutable_lower_bound()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_lower_bound());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BetweenExpr::CopyFrom(const BetweenExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.BetweenExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BetweenExpr::IsInitialized() const {
  return true;
}

void BetweenExpr::InternalSwap(BetweenExpr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BetweenExpr, _impl_.lower_bound_)
      + sizeof(BetweenExpr::_impl_.lower_bound_)
      - PROTOBUF_FIELD_OFFSET(BetweenExpr, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BetweenExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[19]);
}

// ===================================================================

class InExpr::_Internal {
 public:
  static const ::infinity_grpc_proto::ParsedExpr& left(const InExpr* msg);
};

const ::infinity_grpc_proto::ParsedExpr&
InExpr::_Internal::left(const InExpr* msg) {
  return *msg->_impl_.left_;
}
InExpr::InExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.InExpr)
}
InExpr::InExpr(const InExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.left_){nullptr}
    , decltype(_impl_.not_in_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_left()) {
    _this->_impl_.left_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.left_);
  }
  _this->_impl_.not_in_ = from._impl_.not_in_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.InExpr)
}

inline void InExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.left_){nullptr}
    , decltype(_impl_.not_in_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InExpr::~InExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.InExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.left_;
}

void InExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.InExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.left_ != nullptr) {
    delete _impl_.left_;
  }
  _impl_.left_ = nullptr;
  _impl_.not_in_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ParsedExpr left = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_left(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool not_in = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.not_in_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.InExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ParsedExpr left = 1;
  if (this->_internal_has_left()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::left(this),
        _Internal::left(this).GetCachedSize(), target, stream);
  }

  // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool not_in = 3;
  if (this->_internal_not_in() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_not_in(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.InExpr)
  return target;
}

size_t InExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.InExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ParsedExpr arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .infinity_grpc_proto.ParsedExpr left = 1;
  if (this->_internal_has_left()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.left_);
  }

  // bool not_in = 3;
  if (this->_internal_not_in() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InExpr::GetClassData() const { return &_class_data_; }


void InExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InExpr*>(&to_msg);
  auto& from = static_cast<const InExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.InExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  if (from._internal_has_left()) {
    _this->_internal_mutable_left()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_left());
  }
  if (from._internal_not_in() != 0) {
    _this->_internal_set_not_in(from._internal_not_in());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InExpr::CopyFrom(const InExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.InExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InExpr::IsInitialized() const {
  return true;
}

void InExpr::InternalSwap(InExpr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InExpr, _impl_.not_in_)
      + sizeof(InExpr::_impl_.not_in_)
      - PROTOBUF_FIELD_OFFSET(InExpr, _impl_.left_)>(
          reinterpret_cast<char*>(&_impl_.left_),
          reinterpret_cast<char*>(&other->_impl_.left_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[20]);
}

// ===================================================================

class KnnExpr::_Internal {
 public:
  static const ::infinity_grpc_proto::ParsedExpr& column_expr(const KnnExpr* msg);
};

const ::infinity_grpc_proto::ParsedExpr&
KnnExpr::_Internal::column_expr(const KnnExpr* msg) {
  return *msg->_impl_.column_expr_;
}
KnnExpr::KnnExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.KnnExpr)
}
KnnExpr::KnnExpr(const KnnExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KnnExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.embedding_data_){from._impl_.embedding_data_}
    , decltype(_impl_.column_expr_){nullptr}
    , decltype(_impl_.dimension_){}
    , decltype(_impl_.embedding_data_type_){}
    , decltype(_impl_.distance_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_column_expr()) {
    _this->_impl_.column_expr_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.column_expr_);
  }
  ::memcpy(&_impl_.dimension_, &from._impl_.dimension_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.distance_type_) -
    reinterpret_cast<char*>(&_impl_.dimension_)) + sizeof(_impl_.distance_type_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.KnnExpr)
}

inline void KnnExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.embedding_data_){arena}
    , decltype(_impl_.column_expr_){nullptr}
    , decltype(_impl_.dimension_){int64_t{0}}
    , decltype(_impl_.embedding_data_type_){0}
    , decltype(_impl_.distance_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

KnnExpr::~KnnExpr() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.KnnExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KnnExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.embedding_data_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.column_expr_;
}

void KnnExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KnnExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.KnnExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.embedding_data_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.column_expr_ != nullptr) {
    delete _impl_.column_expr_;
  }
  _impl_.column_expr_ = nullptr;
  ::memset(&_impl_.dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.distance_type_) -
      reinterpret_cast<char*>(&_impl_.dimension_)) + sizeof(_impl_.distance_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KnnExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ParsedExpr column_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_column_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string embedding_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_embedding_data();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.KnnExpr.embedding_data"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 dimension = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.dimension_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.KnnExpr.EmbeddingDataType embedding_data_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_embedding_data_type(static_cast<::infinity_grpc_proto::KnnExpr_EmbeddingDataType>(val));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.KnnExpr.KnnDistanceType distance_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_distance_type(static_cast<::infinity_grpc_proto::KnnExpr_KnnDistanceType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KnnExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.KnnExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ParsedExpr column_expr = 1;
  if (this->_internal_has_column_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::column_expr(this),
        _Internal::column_expr(this).GetCachedSize(), target, stream);
  }

  // repeated string embedding_data = 2;
  for (int i = 0, n = this->_internal_embedding_data_size(); i < n; i++) {
    const auto& s = this->_internal_embedding_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.KnnExpr.embedding_data");
    target = stream->WriteString(2, s, target);
  }

  // int64 dimension = 3;
  if (this->_internal_dimension() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_dimension(), target);
  }

  // .infinity_grpc_proto.KnnExpr.EmbeddingDataType embedding_data_type = 4;
  if (this->_internal_embedding_data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_embedding_data_type(), target);
  }

  // .infinity_grpc_proto.KnnExpr.KnnDistanceType distance_type = 5;
  if (this->_internal_distance_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_distance_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.KnnExpr)
  return target;
}

size_t KnnExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.KnnExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string embedding_data = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.embedding_data_.size());
  for (int i = 0, n = _impl_.embedding_data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.embedding_data_.Get(i));
  }

  // .infinity_grpc_proto.ParsedExpr column_expr = 1;
  if (this->_internal_has_column_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.column_expr_);
  }

  // int64 dimension = 3;
  if (this->_internal_dimension() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_dimension());
  }

  // .infinity_grpc_proto.KnnExpr.EmbeddingDataType embedding_data_type = 4;
  if (this->_internal_embedding_data_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_embedding_data_type());
  }

  // .infinity_grpc_proto.KnnExpr.KnnDistanceType distance_type = 5;
  if (this->_internal_distance_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_distance_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KnnExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KnnExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KnnExpr::GetClassData() const { return &_class_data_; }


void KnnExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KnnExpr*>(&to_msg);
  auto& from = static_cast<const KnnExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.KnnExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.embedding_data_.MergeFrom(from._impl_.embedding_data_);
  if (from._internal_has_column_expr()) {
    _this->_internal_mutable_column_expr()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_column_expr());
  }
  if (from._internal_dimension() != 0) {
    _this->_internal_set_dimension(from._internal_dimension());
  }
  if (from._internal_embedding_data_type() != 0) {
    _this->_internal_set_embedding_data_type(from._internal_embedding_data_type());
  }
  if (from._internal_distance_type() != 0) {
    _this->_internal_set_distance_type(from._internal_distance_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KnnExpr::CopyFrom(const KnnExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.KnnExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KnnExpr::IsInitialized() const {
  return true;
}

void KnnExpr::InternalSwap(KnnExpr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.embedding_data_.InternalSwap(&other->_impl_.embedding_data_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KnnExpr, _impl_.distance_type_)
      + sizeof(KnnExpr::_impl_.distance_type_)
      - PROTOBUF_FIELD_OFFSET(KnnExpr, _impl_.column_expr_)>(
          reinterpret_cast<char*>(&_impl_.column_expr_),
          reinterpret_cast<char*>(&other->_impl_.column_expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KnnExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[21]);
}

// ===================================================================

class SelectStatement::_Internal {
 public:
  static const ::infinity_grpc_proto::ParsedExpr& where_expr(const SelectStatement* msg);
  static const ::infinity_grpc_proto::ParsedExpr& limit_expr(const SelectStatement* msg);
  static const ::infinity_grpc_proto::ParsedExpr& offset_expr(const SelectStatement* msg);
  static const ::infinity_grpc_proto::ParsedExpr& search_expr(const SelectStatement* msg);
};

const ::infinity_grpc_proto::ParsedExpr&
SelectStatement::_Internal::where_expr(const SelectStatement* msg) {
  return *msg->_impl_.where_expr_;
}
const ::infinity_grpc_proto::ParsedExpr&
SelectStatement::_Internal::limit_expr(const SelectStatement* msg) {
  return *msg->_impl_.limit_expr_;
}
const ::infinity_grpc_proto::ParsedExpr&
SelectStatement::_Internal::offset_expr(const SelectStatement* msg) {
  return *msg->_impl_.offset_expr_;
}
const ::infinity_grpc_proto::ParsedExpr&
SelectStatement::_Internal::search_expr(const SelectStatement* msg) {
  return *msg->_impl_.search_expr_;
}
SelectStatement::SelectStatement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.SelectStatement)
}
SelectStatement::SelectStatement(const SelectStatement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SelectStatement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.select_list_){from._impl_.select_list_}
    , decltype(_impl_.group_by_list_){from._impl_.group_by_list_}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.where_expr_){nullptr}
    , decltype(_impl_.limit_expr_){nullptr}
    , decltype(_impl_.offset_expr_){nullptr}
    , decltype(_impl_.search_expr_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_where_expr()) {
    _this->_impl_.where_expr_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.where_expr_);
  }
  if (from._internal_has_limit_expr()) {
    _this->_impl_.limit_expr_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.limit_expr_);
  }
  if (from._internal_has_offset_expr()) {
    _this->_impl_.offset_expr_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.offset_expr_);
  }
  if (from._internal_has_search_expr()) {
    _this->_impl_.search_expr_ = new ::infinity_grpc_proto::ParsedExpr(*from._impl_.search_expr_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.SelectStatement)
}

inline void SelectStatement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.select_list_){arena}
    , decltype(_impl_.group_by_list_){arena}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.where_expr_){nullptr}
    , decltype(_impl_.limit_expr_){nullptr}
    , decltype(_impl_.offset_expr_){nullptr}
    , decltype(_impl_.search_expr_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SelectStatement::~SelectStatement() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.SelectStatement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SelectStatement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.select_list_.~RepeatedPtrField();
  _impl_.group_by_list_.~RepeatedPtrField();
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.where_expr_;
  if (this != internal_default_instance()) delete _impl_.limit_expr_;
  if (this != internal_default_instance()) delete _impl_.offset_expr_;
  if (this != internal_default_instance()) delete _impl_.search_expr_;
}

void SelectStatement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SelectStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.SelectStatement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.select_list_.Clear();
  _impl_.group_by_list_.Clear();
  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.where_expr_ != nullptr) {
    delete _impl_.where_expr_;
  }
  _impl_.where_expr_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.limit_expr_ != nullptr) {
    delete _impl_.limit_expr_;
  }
  _impl_.limit_expr_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.offset_expr_ != nullptr) {
    delete _impl_.offset_expr_;
  }
  _impl_.offset_expr_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.search_expr_ != nullptr) {
    delete _impl_.search_expr_;
  }
  _impl_.search_expr_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelectStatement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.SelectStatement.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.SelectStatement.table_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ParsedExpr select_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_select_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr where_expr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_where_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ParsedExpr group_by_list = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_group_by_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr limit_expr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_limit_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr offset_expr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_offset_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.ParsedExpr search_expr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_search_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SelectStatement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.SelectStatement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.SelectStatement.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.SelectStatement.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // repeated .infinity_grpc_proto.ParsedExpr select_list = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_select_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_select_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr where_expr = 4;
  if (this->_internal_has_where_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::where_expr(this),
        _Internal::where_expr(this).GetCachedSize(), target, stream);
  }

  // repeated .infinity_grpc_proto.ParsedExpr group_by_list = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_by_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_group_by_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr limit_expr = 6;
  if (this->_internal_has_limit_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::limit_expr(this),
        _Internal::limit_expr(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr offset_expr = 7;
  if (this->_internal_has_offset_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::offset_expr(this),
        _Internal::offset_expr(this).GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.ParsedExpr search_expr = 8;
  if (this->_internal_has_search_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::search_expr(this),
        _Internal::search_expr(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 9;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(9, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.SelectStatement)
  return target;
}

size_t SelectStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.SelectStatement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ParsedExpr select_list = 3;
  total_size += 1UL * this->_internal_select_list_size();
  for (const auto& msg : this->_impl_.select_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .infinity_grpc_proto.ParsedExpr group_by_list = 5;
  total_size += 1UL * this->_internal_group_by_list_size();
  for (const auto& msg : this->_impl_.group_by_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // .infinity_grpc_proto.ParsedExpr where_expr = 4;
  if (this->_internal_has_where_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.where_expr_);
  }

  // .infinity_grpc_proto.ParsedExpr limit_expr = 6;
  if (this->_internal_has_limit_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.limit_expr_);
  }

  // .infinity_grpc_proto.ParsedExpr offset_expr = 7;
  if (this->_internal_has_offset_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.offset_expr_);
  }

  // .infinity_grpc_proto.ParsedExpr search_expr = 8;
  if (this->_internal_has_search_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.search_expr_);
  }

  // uint64 session_id = 9;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SelectStatement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SelectStatement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SelectStatement::GetClassData() const { return &_class_data_; }


void SelectStatement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SelectStatement*>(&to_msg);
  auto& from = static_cast<const SelectStatement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.SelectStatement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.select_list_.MergeFrom(from._impl_.select_list_);
  _this->_impl_.group_by_list_.MergeFrom(from._impl_.group_by_list_);
  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_has_where_expr()) {
    _this->_internal_mutable_where_expr()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_where_expr());
  }
  if (from._internal_has_limit_expr()) {
    _this->_internal_mutable_limit_expr()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_limit_expr());
  }
  if (from._internal_has_offset_expr()) {
    _this->_internal_mutable_offset_expr()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_offset_expr());
  }
  if (from._internal_has_search_expr()) {
    _this->_internal_mutable_search_expr()->::infinity_grpc_proto::ParsedExpr::MergeFrom(
        from._internal_search_expr());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SelectStatement::CopyFrom(const SelectStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.SelectStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectStatement::IsInitialized() const {
  return true;
}

void SelectStatement::InternalSwap(SelectStatement* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.select_list_.InternalSwap(&other->_impl_.select_list_);
  _impl_.group_by_list_.InternalSwap(&other->_impl_.group_by_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectStatement, _impl_.session_id_)
      + sizeof(SelectStatement::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(SelectStatement, _impl_.where_expr_)>(
          reinterpret_cast<char*>(&_impl_.where_expr_),
          reinterpret_cast<char*>(&other->_impl_.where_expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SelectStatement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[22]);
}

// ===================================================================

class DisConnectRequest::_Internal {
 public:
};

DisConnectRequest::DisConnectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DisConnectRequest)
}
DisConnectRequest::DisConnectRequest(const DisConnectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisConnectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DisConnectRequest)
}

inline void DisConnectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisConnectRequest::~DisConnectRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DisConnectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisConnectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DisConnectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DisConnectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisConnectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisConnectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DisConnectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DisConnectRequest)
  return target;
}

size_t DisConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DisConnectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisConnectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisConnectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisConnectRequest::GetClassData() const { return &_class_data_; }


void DisConnectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisConnectRequest*>(&to_msg);
  auto& from = static_cast<const DisConnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DisConnectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisConnectRequest::CopyFrom(const DisConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DisConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisConnectRequest::IsInitialized() const {
  return true;
}

void DisConnectRequest::InternalSwap(DisConnectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisConnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[23]);
}

// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Empty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.Empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[24]);
}

// ===================================================================

class CommonResponse::_Internal {
 public:
};

CommonResponse::CommonResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.CommonResponse)
}
CommonResponse::CommonResponse(const CommonResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommonResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_msg_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_msg().empty()) {
    _this->_impl_.error_msg_.Set(from._internal_error_msg(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.session_id_, &from._impl_.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.CommonResponse)
}

inline void CommonResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_msg_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommonResponse::~CommonResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.CommonResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommonResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_msg_.Destroy();
}

void CommonResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.CommonResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_msg_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CommonResponse.error_msg"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommonResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.CommonResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_msg = 2;
  if (!this->_internal_error_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CommonResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.CommonResponse)
  return target;
}

size_t CommonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.CommonResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (!this->_internal_error_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommonResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommonResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommonResponse::GetClassData() const { return &_class_data_; }


void CommonResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommonResponse*>(&to_msg);
  auto& from = static_cast<const CommonResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.CommonResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_msg().empty()) {
    _this->_internal_set_error_msg(from._internal_error_msg());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommonResponse::CopyFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonResponse::IsInitialized() const {
  return true;
}

void CommonResponse::InternalSwap(CommonResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_msg_, lhs_arena,
      &other->_impl_.error_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonResponse, _impl_.success_)
      + sizeof(CommonResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CommonResponse, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[25]);
}

// ===================================================================

class SelectResponse::_Internal {
 public:
};

SelectResponse::SelectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.SelectResponse)
}
SelectResponse::SelectResponse(const SelectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SelectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_defs_){from._impl_.column_defs_}
    , decltype(_impl_.column_fields_){from._impl_.column_fields_}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_msg().empty()) {
    _this->_impl_.error_msg_.Set(from._internal_error_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.SelectResponse)
}

inline void SelectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_defs_){arena}
    , decltype(_impl_.column_fields_){arena}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SelectResponse::~SelectResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.SelectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SelectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_defs_.~RepeatedPtrField();
  _impl_.column_fields_.~RepeatedPtrField();
  _impl_.error_msg_.Destroy();
}

void SelectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SelectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.SelectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_defs_.Clear();
  _impl_.column_fields_.Clear();
  _impl_.error_msg_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.SelectResponse.error_msg"));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_column_defs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.ColumnField column_fields = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_column_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SelectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.SelectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_msg = 2;
  if (!this->_internal_error_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.SelectResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_column_defs_size()); i < n; i++) {
    const auto& repfield = this->_internal_column_defs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .infinity_grpc_proto.ColumnField column_fields = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_column_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_column_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.SelectResponse)
  return target;
}

size_t SelectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.SelectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.ColumnDef column_defs = 3;
  total_size += 1UL * this->_internal_column_defs_size();
  for (const auto& msg : this->_impl_.column_defs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .infinity_grpc_proto.ColumnField column_fields = 4;
  total_size += 1UL * this->_internal_column_fields_size();
  for (const auto& msg : this->_impl_.column_fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string error_msg = 2;
  if (!this->_internal_error_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SelectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SelectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SelectResponse::GetClassData() const { return &_class_data_; }


void SelectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SelectResponse*>(&to_msg);
  auto& from = static_cast<const SelectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.SelectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_defs_.MergeFrom(from._impl_.column_defs_);
  _this->_impl_.column_fields_.MergeFrom(from._impl_.column_fields_);
  if (!from._internal_error_msg().empty()) {
    _this->_internal_set_error_msg(from._internal_error_msg());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SelectResponse::CopyFrom(const SelectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.SelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectResponse::IsInitialized() const {
  return true;
}

void SelectResponse::InternalSwap(SelectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_defs_.InternalSwap(&other->_impl_.column_defs_);
  _impl_.column_fields_.InternalSwap(&other->_impl_.column_fields_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_msg_, lhs_arena,
      &other->_impl_.error_msg_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[26]);
}

// ===================================================================

class ColumnField::_Internal {
 public:
};

ColumnField::ColumnField(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ColumnField)
}
ColumnField::ColumnField(const ColumnField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColumnField* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vector_){}
    , decltype(_impl_.column_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.column_vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.column_vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_column_vector().empty()) {
    _this->_impl_.column_vector_.Set(from._internal_column_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.column_type_ = from._impl_.column_type_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ColumnField)
}

inline void ColumnField::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vector_){}
    , decltype(_impl_.column_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.column_vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.column_vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ColumnField::~ColumnField() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ColumnField)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColumnField::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_vector_.Destroy();
}

void ColumnField::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColumnField::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ColumnField)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_vector_.ClearToEmpty();
  _impl_.column_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColumnField::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .infinity_grpc_proto.ColumnType column_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_column_type(static_cast<::infinity_grpc_proto::ColumnType>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes column_vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_column_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColumnField::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ColumnField)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .infinity_grpc_proto.ColumnType column_type = 1;
  if (this->_internal_column_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_column_type(), target);
  }

  // bytes column_vector = 2;
  if (!this->_internal_column_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_column_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ColumnField)
  return target;
}

size_t ColumnField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ColumnField)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes column_vector = 2;
  if (!this->_internal_column_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_column_vector());
  }

  // .infinity_grpc_proto.ColumnType column_type = 1;
  if (this->_internal_column_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_column_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColumnField::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColumnField::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColumnField::GetClassData() const { return &_class_data_; }


void ColumnField::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColumnField*>(&to_msg);
  auto& from = static_cast<const ColumnField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ColumnField)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_column_vector().empty()) {
    _this->_internal_set_column_vector(from._internal_column_vector());
  }
  if (from._internal_column_type() != 0) {
    _this->_internal_set_column_type(from._internal_column_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnField::CopyFrom(const ColumnField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ColumnField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnField::IsInitialized() const {
  return true;
}

void ColumnField::InternalSwap(ColumnField* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.column_vector_, lhs_arena,
      &other->_impl_.column_vector_, rhs_arena
  );
  swap(_impl_.column_type_, other->_impl_.column_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ColumnField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[27]);
}

// ===================================================================

class DataBlock_ColumnVector::_Internal {
 public:
};

DataBlock_ColumnVector::DataBlock_ColumnVector(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DataBlock.ColumnVector)
}
DataBlock_ColumnVector::DataBlock_ColumnVector(const DataBlock_ColumnVector& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DataBlock_ColumnVector* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vectors_){from._impl_.column_vectors_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DataBlock.ColumnVector)
}

inline void DataBlock_ColumnVector::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vectors_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DataBlock_ColumnVector::~DataBlock_ColumnVector() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DataBlock.ColumnVector)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataBlock_ColumnVector::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_vectors_.~RepeatedPtrField();
}

void DataBlock_ColumnVector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataBlock_ColumnVector::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DataBlock.ColumnVector)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_vectors_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataBlock_ColumnVector::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_column_vectors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataBlock_ColumnVector::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DataBlock.ColumnVector)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_column_vectors_size()); i < n; i++) {
    const auto& repfield = this->_internal_column_vectors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DataBlock.ColumnVector)
  return target;
}

size_t DataBlock_ColumnVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DataBlock.ColumnVector)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 1;
  total_size += 1UL * this->_internal_column_vectors_size();
  for (const auto& msg : this->_impl_.column_vectors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataBlock_ColumnVector::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DataBlock_ColumnVector::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataBlock_ColumnVector::GetClassData() const { return &_class_data_; }


void DataBlock_ColumnVector::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DataBlock_ColumnVector*>(&to_msg);
  auto& from = static_cast<const DataBlock_ColumnVector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DataBlock.ColumnVector)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_vectors_.MergeFrom(from._impl_.column_vectors_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataBlock_ColumnVector::CopyFrom(const DataBlock_ColumnVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DataBlock.ColumnVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBlock_ColumnVector::IsInitialized() const {
  return true;
}

void DataBlock_ColumnVector::InternalSwap(DataBlock_ColumnVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_vectors_.InternalSwap(&other->_impl_.column_vectors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataBlock_ColumnVector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[28]);
}

// ===================================================================

class DataBlock::_Internal {
 public:
};

DataBlock::DataBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DataBlock)
}
DataBlock::DataBlock(const DataBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DataBlock* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vectors_){from._impl_.column_vectors_}
    , decltype(_impl_.row_count_){}
    , decltype(_impl_.column_count_){}
    , decltype(_impl_.capacity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.row_count_, &from._impl_.row_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.capacity_) -
    reinterpret_cast<char*>(&_impl_.row_count_)) + sizeof(_impl_.capacity_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DataBlock)
}

inline void DataBlock::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_vectors_){arena}
    , decltype(_impl_.row_count_){0}
    , decltype(_impl_.column_count_){0}
    , decltype(_impl_.capacity_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DataBlock::~DataBlock() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DataBlock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_vectors_.~RepeatedPtrField();
}

void DataBlock::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DataBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_vectors_.Clear();
  ::memset(&_impl_.row_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.capacity_) -
      reinterpret_cast<char*>(&_impl_.row_count_)) + sizeof(_impl_.capacity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataBlock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 row_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.row_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 column_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.column_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 capacity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.capacity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_column_vectors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DataBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row_count = 1;
  if (this->_internal_row_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_row_count(), target);
  }

  // int32 column_count = 2;
  if (this->_internal_column_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_column_count(), target);
  }

  // int32 capacity = 3;
  if (this->_internal_capacity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_capacity(), target);
  }

  // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_column_vectors_size()); i < n; i++) {
    const auto& repfield = this->_internal_column_vectors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DataBlock)
  return target;
}

size_t DataBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DataBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .infinity_grpc_proto.DataBlock.ColumnVector column_vectors = 4;
  total_size += 1UL * this->_internal_column_vectors_size();
  for (const auto& msg : this->_impl_.column_vectors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 row_count = 1;
  if (this->_internal_row_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_row_count());
  }

  // int32 column_count = 2;
  if (this->_internal_column_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_column_count());
  }

  // int32 capacity = 3;
  if (this->_internal_capacity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_capacity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DataBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataBlock::GetClassData() const { return &_class_data_; }


void DataBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DataBlock*>(&to_msg);
  auto& from = static_cast<const DataBlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DataBlock)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_vectors_.MergeFrom(from._impl_.column_vectors_);
  if (from._internal_row_count() != 0) {
    _this->_internal_set_row_count(from._internal_row_count());
  }
  if (from._internal_column_count() != 0) {
    _this->_internal_set_column_count(from._internal_column_count());
  }
  if (from._internal_capacity() != 0) {
    _this->_internal_set_capacity(from._internal_capacity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataBlock::CopyFrom(const DataBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DataBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBlock::IsInitialized() const {
  return true;
}

void DataBlock::InternalSwap(DataBlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_vectors_.InternalSwap(&other->_impl_.column_vectors_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataBlock, _impl_.capacity_)
      + sizeof(DataBlock::_impl_.capacity_)
      - PROTOBUF_FIELD_OFFSET(DataBlock, _impl_.row_count_)>(
          reinterpret_cast<char*>(&_impl_.row_count_),
          reinterpret_cast<char*>(&other->_impl_.row_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataBlock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[29]);
}

// ===================================================================

class ListDatabaseRequest::_Internal {
 public:
};

ListDatabaseRequest::ListDatabaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ListDatabaseRequest)
}
ListDatabaseRequest::ListDatabaseRequest(const ListDatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListDatabaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ListDatabaseRequest)
}

inline void ListDatabaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListDatabaseRequest::~ListDatabaseRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ListDatabaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListDatabaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListDatabaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ListDatabaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDatabaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDatabaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ListDatabaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ListDatabaseRequest)
  return target;
}

size_t ListDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ListDatabaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 session_id = 1;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDatabaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListDatabaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDatabaseRequest::GetClassData() const { return &_class_data_; }


void ListDatabaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListDatabaseRequest*>(&to_msg);
  auto& from = static_cast<const ListDatabaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ListDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDatabaseRequest::CopyFrom(const ListDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ListDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDatabaseRequest::IsInitialized() const {
  return true;
}

void ListDatabaseRequest::InternalSwap(ListDatabaseRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDatabaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[30]);
}

// ===================================================================

class ListDatabaseResponse::_Internal {
 public:
};

ListDatabaseResponse::ListDatabaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ListDatabaseResponse)
}
ListDatabaseResponse::ListDatabaseResponse(const ListDatabaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListDatabaseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_names_){from._impl_.db_names_}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_msg().empty()) {
    _this->_impl_.error_msg_.Set(from._internal_error_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ListDatabaseResponse)
}

inline void ListDatabaseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_names_){arena}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListDatabaseResponse::~ListDatabaseResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ListDatabaseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListDatabaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_names_.~RepeatedPtrField();
  _impl_.error_msg_.Destroy();
}

void ListDatabaseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListDatabaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ListDatabaseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_names_.Clear();
  _impl_.error_msg_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDatabaseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string db_names = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_db_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListDatabaseResponse.db_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListDatabaseResponse.error_msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDatabaseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ListDatabaseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string db_names = 1;
  for (int i = 0, n = this->_internal_db_names_size(); i < n; i++) {
    const auto& s = this->_internal_db_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListDatabaseResponse.db_names");
    target = stream->WriteString(1, s, target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListDatabaseResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ListDatabaseResponse)
  return target;
}

size_t ListDatabaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ListDatabaseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string db_names = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.db_names_.size());
  for (int i = 0, n = _impl_.db_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.db_names_.Get(i));
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDatabaseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListDatabaseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDatabaseResponse::GetClassData() const { return &_class_data_; }


void ListDatabaseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListDatabaseResponse*>(&to_msg);
  auto& from = static_cast<const ListDatabaseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ListDatabaseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.db_names_.MergeFrom(from._impl_.db_names_);
  if (!from._internal_error_msg().empty()) {
    _this->_internal_set_error_msg(from._internal_error_msg());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDatabaseResponse::CopyFrom(const ListDatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ListDatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDatabaseResponse::IsInitialized() const {
  return true;
}

void ListDatabaseResponse::InternalSwap(ListDatabaseResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.db_names_.InternalSwap(&other->_impl_.db_names_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_msg_, lhs_arena,
      &other->_impl_.error_msg_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDatabaseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[31]);
}

// ===================================================================

class DescribeDatabaseRequest::_Internal {
 public:
};

DescribeDatabaseRequest::DescribeDatabaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DescribeDatabaseRequest)
}
DescribeDatabaseRequest::DescribeDatabaseRequest(const DescribeDatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DescribeDatabaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DescribeDatabaseRequest)
}

inline void DescribeDatabaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DescribeDatabaseRequest::~DescribeDatabaseRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DescribeDatabaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DescribeDatabaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
}

void DescribeDatabaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DescribeDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DescribeDatabaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DescribeDatabaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DescribeDatabaseRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DescribeDatabaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DescribeDatabaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DescribeDatabaseRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DescribeDatabaseRequest)
  return target;
}

size_t DescribeDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DescribeDatabaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DescribeDatabaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DescribeDatabaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DescribeDatabaseRequest::GetClassData() const { return &_class_data_; }


void DescribeDatabaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DescribeDatabaseRequest*>(&to_msg);
  auto& from = static_cast<const DescribeDatabaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DescribeDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DescribeDatabaseRequest::CopyFrom(const DescribeDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DescribeDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeDatabaseRequest::IsInitialized() const {
  return true;
}

void DescribeDatabaseRequest::InternalSwap(DescribeDatabaseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeDatabaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[32]);
}

// ===================================================================

class DescribeDatabaseResponse::_Internal {
 public:
};

DescribeDatabaseResponse::DescribeDatabaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DescribeDatabaseResponse)
}
DescribeDatabaseResponse::DescribeDatabaseResponse(const DescribeDatabaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DescribeDatabaseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.db_id_){}
    , decltype(_impl_.num_segments_){}
    , decltype(_impl_.num_blocks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.db_id_, &from._impl_.db_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_blocks_) -
    reinterpret_cast<char*>(&_impl_.db_id_)) + sizeof(_impl_.num_blocks_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DescribeDatabaseResponse)
}

inline void DescribeDatabaseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.db_id_){0}
    , decltype(_impl_.num_segments_){0}
    , decltype(_impl_.num_blocks_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DescribeDatabaseResponse::~DescribeDatabaseResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DescribeDatabaseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DescribeDatabaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
}

void DescribeDatabaseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DescribeDatabaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DescribeDatabaseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  ::memset(&_impl_.db_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_blocks_) -
      reinterpret_cast<char*>(&_impl_.db_id_)) + sizeof(_impl_.num_blocks_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DescribeDatabaseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DescribeDatabaseResponse.db_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 db_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.db_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num_segments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num_blocks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.num_blocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DescribeDatabaseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DescribeDatabaseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DescribeDatabaseResponse.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // int32 db_id = 2;
  if (this->_internal_db_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_db_id(), target);
  }

  // int32 num_segments = 3;
  if (this->_internal_num_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num_segments(), target);
  }

  // int32 num_blocks = 4;
  if (this->_internal_num_blocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_num_blocks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DescribeDatabaseResponse)
  return target;
}

size_t DescribeDatabaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DescribeDatabaseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // int32 db_id = 2;
  if (this->_internal_db_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_db_id());
  }

  // int32 num_segments = 3;
  if (this->_internal_num_segments() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_segments());
  }

  // int32 num_blocks = 4;
  if (this->_internal_num_blocks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_blocks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DescribeDatabaseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DescribeDatabaseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DescribeDatabaseResponse::GetClassData() const { return &_class_data_; }


void DescribeDatabaseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DescribeDatabaseResponse*>(&to_msg);
  auto& from = static_cast<const DescribeDatabaseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DescribeDatabaseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_db_id() != 0) {
    _this->_internal_set_db_id(from._internal_db_id());
  }
  if (from._internal_num_segments() != 0) {
    _this->_internal_set_num_segments(from._internal_num_segments());
  }
  if (from._internal_num_blocks() != 0) {
    _this->_internal_set_num_blocks(from._internal_num_blocks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DescribeDatabaseResponse::CopyFrom(const DescribeDatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DescribeDatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeDatabaseResponse::IsInitialized() const {
  return true;
}

void DescribeDatabaseResponse::InternalSwap(DescribeDatabaseResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DescribeDatabaseResponse, _impl_.num_blocks_)
      + sizeof(DescribeDatabaseResponse::_impl_.num_blocks_)
      - PROTOBUF_FIELD_OFFSET(DescribeDatabaseResponse, _impl_.db_id_)>(
          reinterpret_cast<char*>(&_impl_.db_id_),
          reinterpret_cast<char*>(&other->_impl_.db_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeDatabaseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[33]);
}

// ===================================================================

class ListTableRequest::_Internal {
 public:
};

ListTableRequest::ListTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ListTableRequest)
}
ListTableRequest::ListTableRequest(const ListTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_msg().empty()) {
    _this->_impl_.error_msg_.Set(from._internal_error_msg(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.session_id_, &from._impl_.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ListTableRequest)
}

inline void ListTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListTableRequest::~ListTableRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ListTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.error_msg_.Destroy();
}

void ListTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ListTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.error_msg_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListTableRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListTableRequest.error_msg"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ListTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListTableRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListTableRequest.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ListTableRequest)
  return target;
}

size_t ListTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ListTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTableRequest::GetClassData() const { return &_class_data_; }


void ListTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListTableRequest*>(&to_msg);
  auto& from = static_cast<const ListTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ListTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_error_msg().empty()) {
    _this->_internal_set_error_msg(from._internal_error_msg());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTableRequest::CopyFrom(const ListTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ListTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTableRequest::IsInitialized() const {
  return true;
}

void ListTableRequest::InternalSwap(ListTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_msg_, lhs_arena,
      &other->_impl_.error_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListTableRequest, _impl_.success_)
      + sizeof(ListTableRequest::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(ListTableRequest, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[34]);
}

// ===================================================================

class ListTableResponse::_Internal {
 public:
};

ListTableResponse::ListTableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.ListTableResponse)
}
ListTableResponse::ListTableResponse(const ListTableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListTableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.table_name_){from._impl_.table_name_}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_msg().empty()) {
    _this->_impl_.error_msg_.Set(from._internal_error_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.ListTableResponse)
}

inline void ListTableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.table_name_){arena}
    , decltype(_impl_.error_msg_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListTableResponse::~ListTableResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.ListTableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListTableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.table_name_.~RepeatedPtrField();
  _impl_.error_msg_.Destroy();
}

void ListTableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.ListTableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_name_.Clear();
  _impl_.error_msg_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string table_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_table_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListTableResponse.table_name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.ListTableResponse.error_msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.ListTableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string table_name = 1;
  for (int i = 0, n = this->_internal_table_name_size(); i < n; i++) {
    const auto& s = this->_internal_table_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListTableResponse.table_name");
    target = stream->WriteString(1, s, target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.ListTableResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.ListTableResponse)
  return target;
}

size_t ListTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.ListTableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string table_name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.table_name_.size());
  for (int i = 0, n = _impl_.table_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.table_name_.Get(i));
  }

  // string error_msg = 3;
  if (!this->_internal_error_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListTableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTableResponse::GetClassData() const { return &_class_data_; }


void ListTableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListTableResponse*>(&to_msg);
  auto& from = static_cast<const ListTableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.ListTableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.table_name_.MergeFrom(from._impl_.table_name_);
  if (!from._internal_error_msg().empty()) {
    _this->_internal_set_error_msg(from._internal_error_msg());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTableResponse::CopyFrom(const ListTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.ListTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTableResponse::IsInitialized() const {
  return true;
}

void ListTableResponse::InternalSwap(ListTableResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.table_name_.InternalSwap(&other->_impl_.table_name_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_msg_, lhs_arena,
      &other->_impl_.error_msg_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[35]);
}

// ===================================================================

class DescribeTableRequest::_Internal {
 public:
};

DescribeTableRequest::DescribeTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DescribeTableRequest)
}
DescribeTableRequest::DescribeTableRequest(const DescribeTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DescribeTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DescribeTableRequest)
}

inline void DescribeTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DescribeTableRequest::~DescribeTableRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DescribeTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DescribeTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
}

void DescribeTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DescribeTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DescribeTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DescribeTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DescribeTableRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DescribeTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DescribeTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DescribeTableRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DescribeTableRequest)
  return target;
}

size_t DescribeTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DescribeTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DescribeTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DescribeTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DescribeTableRequest::GetClassData() const { return &_class_data_; }


void DescribeTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DescribeTableRequest*>(&to_msg);
  auto& from = static_cast<const DescribeTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DescribeTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DescribeTableRequest::CopyFrom(const DescribeTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DescribeTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeTableRequest::IsInitialized() const {
  return true;
}

void DescribeTableRequest::InternalSwap(DescribeTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[36]);
}

// ===================================================================

class DescribeTableResponse::_Internal {
 public:
};

DescribeTableResponse::DescribeTableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DescribeTableResponse)
}
DescribeTableResponse::DescribeTableResponse(const DescribeTableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DescribeTableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.table_name_){}
    , decltype(_impl_.table_id_){}
    , decltype(_impl_.num_segments_){}
    , decltype(_impl_.num_blocks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.table_id_, &from._impl_.table_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_blocks_) -
    reinterpret_cast<char*>(&_impl_.table_id_)) + sizeof(_impl_.num_blocks_));
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DescribeTableResponse)
}

inline void DescribeTableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.table_name_){}
    , decltype(_impl_.table_id_){0}
    , decltype(_impl_.num_segments_){0}
    , decltype(_impl_.num_blocks_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DescribeTableResponse::~DescribeTableResponse() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DescribeTableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DescribeTableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.table_name_.Destroy();
}

void DescribeTableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DescribeTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DescribeTableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_name_.ClearToEmpty();
  ::memset(&_impl_.table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_blocks_) -
      reinterpret_cast<char*>(&_impl_.table_id_)) + sizeof(_impl_.num_blocks_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DescribeTableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string table_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DescribeTableResponse.table_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 table_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.table_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num_segments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num_blocks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.num_blocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DescribeTableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DescribeTableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DescribeTableResponse.table_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_table_name(), target);
  }

  // int32 table_id = 2;
  if (this->_internal_table_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_table_id(), target);
  }

  // int32 num_segments = 3;
  if (this->_internal_num_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num_segments(), target);
  }

  // int32 num_blocks = 4;
  if (this->_internal_num_blocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_num_blocks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DescribeTableResponse)
  return target;
}

size_t DescribeTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DescribeTableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string table_name = 1;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // int32 table_id = 2;
  if (this->_internal_table_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_table_id());
  }

  // int32 num_segments = 3;
  if (this->_internal_num_segments() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_segments());
  }

  // int32 num_blocks = 4;
  if (this->_internal_num_blocks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_blocks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DescribeTableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DescribeTableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DescribeTableResponse::GetClassData() const { return &_class_data_; }


void DescribeTableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DescribeTableResponse*>(&to_msg);
  auto& from = static_cast<const DescribeTableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DescribeTableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_table_id() != 0) {
    _this->_internal_set_table_id(from._internal_table_id());
  }
  if (from._internal_num_segments() != 0) {
    _this->_internal_set_num_segments(from._internal_num_segments());
  }
  if (from._internal_num_blocks() != 0) {
    _this->_internal_set_num_blocks(from._internal_num_blocks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DescribeTableResponse::CopyFrom(const DescribeTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DescribeTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeTableResponse::IsInitialized() const {
  return true;
}

void DescribeTableResponse::InternalSwap(DescribeTableResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DescribeTableResponse, _impl_.num_blocks_)
      + sizeof(DescribeTableResponse::_impl_.num_blocks_)
      - PROTOBUF_FIELD_OFFSET(DescribeTableResponse, _impl_.table_id_)>(
          reinterpret_cast<char*>(&_impl_.table_id_),
          reinterpret_cast<char*>(&other->_impl_.table_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeTableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[37]);
}

// ===================================================================

class GetDatabaseRequest::_Internal {
 public:
};

GetDatabaseRequest::GetDatabaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.GetDatabaseRequest)
}
GetDatabaseRequest::GetDatabaseRequest(const GetDatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDatabaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.GetDatabaseRequest)
}

inline void GetDatabaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDatabaseRequest::~GetDatabaseRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.GetDatabaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDatabaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
}

void GetDatabaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.GetDatabaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDatabaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.GetDatabaseRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDatabaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.GetDatabaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.GetDatabaseRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.GetDatabaseRequest)
  return target;
}

size_t GetDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.GetDatabaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDatabaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDatabaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDatabaseRequest::GetClassData() const { return &_class_data_; }


void GetDatabaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDatabaseRequest*>(&to_msg);
  auto& from = static_cast<const GetDatabaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.GetDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDatabaseRequest::CopyFrom(const GetDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.GetDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatabaseRequest::IsInitialized() const {
  return true;
}

void GetDatabaseRequest::InternalSwap(GetDatabaseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDatabaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[38]);
}

// ===================================================================

class GetTableRequest::_Internal {
 public:
};

GetTableRequest::GetTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.GetTableRequest)
}
GetTableRequest::GetTableRequest(const GetTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.GetTableRequest)
}

inline void GetTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTableRequest::~GetTableRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.GetTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
}

void GetTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.GetTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.GetTableRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.GetTableRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.GetTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.GetTableRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.GetTableRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.GetTableRequest)
  return target;
}

size_t GetTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.GetTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTableRequest::GetClassData() const { return &_class_data_; }


void GetTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTableRequest*>(&to_msg);
  auto& from = static_cast<const GetTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.GetTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableRequest::CopyFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableRequest::IsInitialized() const {
  return true;
}

void GetTableRequest::InternalSwap(GetTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[39]);
}

// ===================================================================

class CreateIndexRequest::_Internal {
 public:
  static const ::infinity_grpc_proto::Options& options(const CreateIndexRequest* msg);
};

const ::infinity_grpc_proto::Options&
CreateIndexRequest::_Internal::options(const CreateIndexRequest* msg) {
  return *msg->_impl_.options_;
}
CreateIndexRequest::CreateIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateIndexRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.column_names_){from._impl_.column_names_}
    , decltype(_impl_.index_para_list_){from._impl_.index_para_list_}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.index_name_){}
    , decltype(_impl_.method_type_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_index_name().empty()) {
    _this->_impl_.index_name_.Set(from._internal_index_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.method_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method_type().empty()) {
    _this->_impl_.method_type_.Set(from._internal_method_type(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::infinity_grpc_proto::Options(*from._impl_.options_);
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.CreateIndexRequest)
}

inline void CreateIndexRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.column_names_){arena}
    , decltype(_impl_.index_para_list_){arena}
    , decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.index_name_){}
    , decltype(_impl_.method_type_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.method_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.CreateIndexRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.column_names_.~RepeatedPtrField();
  _impl_.index_para_list_.~RepeatedPtrField();
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  _impl_.index_name_.Destroy();
  _impl_.method_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
}

void CreateIndexRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.CreateIndexRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_names_.Clear();
  _impl_.index_para_list_.Clear();
  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.index_name_.ClearToEmpty();
  _impl_.method_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateIndexRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateIndexRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateIndexRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // string index_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_index_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateIndexRequest.index_name"));
        } else
          goto handle_unusual;
        continue;
      // string method_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_method_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateIndexRequest.method_type"));
        } else
          goto handle_unusual;
        continue;
      // repeated string column_names = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_column_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.CreateIndexRequest.column_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .infinity_grpc_proto.InitParameter index_para_list = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_index_para_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .infinity_grpc_proto.Options options = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateIndexRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.CreateIndexRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateIndexRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateIndexRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // string index_name = 3;
  if (!this->_internal_index_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_index_name().data(), static_cast<int>(this->_internal_index_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateIndexRequest.index_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_index_name(), target);
  }

  // string method_type = 4;
  if (!this->_internal_method_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method_type().data(), static_cast<int>(this->_internal_method_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateIndexRequest.method_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_method_type(), target);
  }

  // repeated string column_names = 5;
  for (int i = 0, n = this->_internal_column_names_size(); i < n; i++) {
    const auto& s = this->_internal_column_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.CreateIndexRequest.column_names");
    target = stream->WriteString(5, s, target);
  }

  // repeated .infinity_grpc_proto.InitParameter index_para_list = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_index_para_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_index_para_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .infinity_grpc_proto.Options options = 7;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // uint64 session_id = 8;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.CreateIndexRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string column_names = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.column_names_.size());
  for (int i = 0, n = _impl_.column_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.column_names_.Get(i));
  }

  // repeated .infinity_grpc_proto.InitParameter index_para_list = 6;
  total_size += 1UL * this->_internal_index_para_list_size();
  for (const auto& msg : this->_impl_.index_para_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // string index_name = 3;
  if (!this->_internal_index_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_index_name());
  }

  // string method_type = 4;
  if (!this->_internal_method_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method_type());
  }

  // .infinity_grpc_proto.Options options = 7;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // uint64 session_id = 8;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateIndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateIndexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateIndexRequest::GetClassData() const { return &_class_data_; }


void CreateIndexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateIndexRequest*>(&to_msg);
  auto& from = static_cast<const CreateIndexRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.column_names_.MergeFrom(from._impl_.column_names_);
  _this->_impl_.index_para_list_.MergeFrom(from._impl_.index_para_list_);
  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (!from._internal_index_name().empty()) {
    _this->_internal_set_index_name(from._internal_index_name());
  }
  if (!from._internal_method_type().empty()) {
    _this->_internal_set_method_type(from._internal_method_type());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::infinity_grpc_proto::Options::MergeFrom(
        from._internal_options());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  return true;
}

void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.column_names_.InternalSwap(&other->_impl_.column_names_);
  _impl_.index_para_list_.InternalSwap(&other->_impl_.index_para_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.index_name_, lhs_arena,
      &other->_impl_.index_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.method_type_, lhs_arena,
      &other->_impl_.method_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateIndexRequest, _impl_.session_id_)
      + sizeof(CreateIndexRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(CreateIndexRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateIndexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[40]);
}

// ===================================================================

class InitParameter::_Internal {
 public:
};

InitParameter::InitParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.InitParameter)
}
InitParameter::InitParameter(const InitParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InitParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.para_name_){}
    , decltype(_impl_.para_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.para_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.para_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_para_name().empty()) {
    _this->_impl_.para_name_.Set(from._internal_para_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.para_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.para_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_para_value().empty()) {
    _this->_impl_.para_value_.Set(from._internal_para_value(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.InitParameter)
}

inline void InitParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.para_name_){}
    , decltype(_impl_.para_value_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.para_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.para_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.para_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.para_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InitParameter::~InitParameter() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.InitParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.para_name_.Destroy();
  _impl_.para_value_.Destroy();
}

void InitParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InitParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.InitParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.para_name_.ClearToEmpty();
  _impl_.para_value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string para_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_para_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.InitParameter.para_name"));
        } else
          goto handle_unusual;
        continue;
      // string para_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_para_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.InitParameter.para_value"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.InitParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string para_name = 1;
  if (!this->_internal_para_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_para_name().data(), static_cast<int>(this->_internal_para_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.InitParameter.para_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_para_name(), target);
  }

  // string para_value = 2;
  if (!this->_internal_para_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_para_value().data(), static_cast<int>(this->_internal_para_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.InitParameter.para_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_para_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.InitParameter)
  return target;
}

size_t InitParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.InitParameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string para_name = 1;
  if (!this->_internal_para_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_para_name());
  }

  // string para_value = 2;
  if (!this->_internal_para_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_para_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InitParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitParameter::GetClassData() const { return &_class_data_; }


void InitParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InitParameter*>(&to_msg);
  auto& from = static_cast<const InitParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.InitParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_para_name().empty()) {
    _this->_internal_set_para_name(from._internal_para_name());
  }
  if (!from._internal_para_value().empty()) {
    _this->_internal_set_para_value(from._internal_para_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitParameter::CopyFrom(const InitParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.InitParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitParameter::IsInitialized() const {
  return true;
}

void InitParameter::InternalSwap(InitParameter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.para_name_, lhs_arena,
      &other->_impl_.para_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.para_value_, lhs_arena,
      &other->_impl_.para_value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InitParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[41]);
}

// ===================================================================

class DropIndexRequest::_Internal {
 public:
};

DropIndexRequest::DropIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:infinity_grpc_proto.DropIndexRequest)
}
DropIndexRequest::DropIndexRequest(const DropIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DropIndexRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.index_name_){}
    , decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db_name().empty()) {
    _this->_impl_.db_name_.Set(from._internal_db_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_table_name().empty()) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_index_name().empty()) {
    _this->_impl_.index_name_.Set(from._internal_index_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:infinity_grpc_proto.DropIndexRequest)
}

inline void DropIndexRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.db_name_){}
    , decltype(_impl_.table_name_){}
    , decltype(_impl_.index_name_){}
    , decltype(_impl_.session_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.db_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.db_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DropIndexRequest::~DropIndexRequest() {
  // @@protoc_insertion_point(destructor:infinity_grpc_proto.DropIndexRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DropIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.table_name_.Destroy();
  _impl_.index_name_.Destroy();
}

void DropIndexRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DropIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:infinity_grpc_proto.DropIndexRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.table_name_.ClearToEmpty();
  _impl_.index_name_.ClearToEmpty();
  _impl_.session_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropIndexRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_db_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropIndexRequest.db_name"));
        } else
          goto handle_unusual;
        continue;
      // string table_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_table_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropIndexRequest.table_name"));
        } else
          goto handle_unusual;
        continue;
      // string index_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_index_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "infinity_grpc_proto.DropIndexRequest.index_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropIndexRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:infinity_grpc_proto.DropIndexRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_db_name().data(), static_cast<int>(this->_internal_db_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropIndexRequest.db_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_db_name(), target);
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table_name().data(), static_cast<int>(this->_internal_table_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropIndexRequest.table_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_table_name(), target);
  }

  // string index_name = 3;
  if (!this->_internal_index_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_index_name().data(), static_cast<int>(this->_internal_index_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "infinity_grpc_proto.DropIndexRequest.index_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_index_name(), target);
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:infinity_grpc_proto.DropIndexRequest)
  return target;
}

size_t DropIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:infinity_grpc_proto.DropIndexRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_db_name());
  }

  // string table_name = 2;
  if (!this->_internal_table_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table_name());
  }

  // string index_name = 3;
  if (!this->_internal_index_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_index_name());
  }

  // uint64 session_id = 4;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropIndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DropIndexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropIndexRequest::GetClassData() const { return &_class_data_; }


void DropIndexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DropIndexRequest*>(&to_msg);
  auto& from = static_cast<const DropIndexRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:infinity_grpc_proto.DropIndexRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_table_name().empty()) {
    _this->_internal_set_table_name(from._internal_table_name());
  }
  if (!from._internal_index_name().empty()) {
    _this->_internal_set_index_name(from._internal_index_name());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropIndexRequest::CopyFrom(const DropIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:infinity_grpc_proto.DropIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropIndexRequest::IsInitialized() const {
  return true;
}

void DropIndexRequest::InternalSwap(DropIndexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.db_name_, lhs_arena,
      &other->_impl_.db_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.table_name_, lhs_arena,
      &other->_impl_.table_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.index_name_, lhs_arena,
      &other->_impl_.index_name_, rhs_arena
  );
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DropIndexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_infinity_5fgrpc_2eproto_getter, &descriptor_table_infinity_5fgrpc_2eproto_once,
      file_level_metadata_infinity_5fgrpc_2eproto[42]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace infinity_grpc_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::Options*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::Options >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::CreateDatabaseRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::CreateDatabaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::CreateDatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DropDatabaseRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DropDatabaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DropDatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::CreateTableRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::CreateTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::CreateTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ColumnConstraint*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ColumnConstraint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ColumnConstraint >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ColumnDef*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ColumnDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ColumnDef >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DataType*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DataType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DataType >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::EmbeddingType*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::EmbeddingType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::EmbeddingType >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::VarcharType*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::VarcharType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::VarcharType >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::NumberType*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::NumberType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::NumberType >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DropTableRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DropTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DropTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::InsertRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::InsertRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::InsertRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::Field*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::Field >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::Field >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ImportRequest_ImportOptions*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ImportRequest_ImportOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ImportRequest_ImportOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ImportRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ImportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ImportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ParsedExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ParsedExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ParsedExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ConstantExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ConstantExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ConstantExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::FunctionExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::FunctionExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::FunctionExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ColumnExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ColumnExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ColumnExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::BetweenExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::BetweenExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::BetweenExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::InExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::InExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::InExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::KnnExpr*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::KnnExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::KnnExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::SelectStatement*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::SelectStatement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::SelectStatement >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DisConnectRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DisConnectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DisConnectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::Empty*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::CommonResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::CommonResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::CommonResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::SelectResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::SelectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::SelectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ColumnField*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ColumnField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ColumnField >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DataBlock_ColumnVector*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DataBlock_ColumnVector >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DataBlock_ColumnVector >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DataBlock*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DataBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DataBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ListDatabaseRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ListDatabaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ListDatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ListDatabaseResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ListDatabaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ListDatabaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DescribeDatabaseRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DescribeDatabaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DescribeDatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DescribeDatabaseResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DescribeDatabaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DescribeDatabaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ListTableRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ListTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ListTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::ListTableResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::ListTableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::ListTableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DescribeTableRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DescribeTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DescribeTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DescribeTableResponse*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DescribeTableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DescribeTableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::GetDatabaseRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::GetDatabaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::GetDatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::GetTableRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::GetTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::GetTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::CreateIndexRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::CreateIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::CreateIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::InitParameter*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::InitParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::InitParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::infinity_grpc_proto::DropIndexRequest*
Arena::CreateMaybeMessage< ::infinity_grpc_proto::DropIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::infinity_grpc_proto::DropIndexRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
