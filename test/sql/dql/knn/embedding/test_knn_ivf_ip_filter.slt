statement ok
DROP TABLE IF EXISTS test_knn_ivf_ip_filter;

statement ok
CREATE TABLE test_knn_ivf_ip_filter(c1 INT, c2 EMBEDDING(FLOAT, 4));

# copy to create one block
# the csv has 4 rows, the ip distance to target([0.3, 0.3, 0.2, 0.2]) is:
# 1. 0.3*0.1 + 0.3*0.2 + 0.2*0.3 + 0.2*(-0.2) = 0.11
# 2. 0.3*0.2 + 0.3*0.1 + 0.2*0.3 + 0.2*0.4 = 0.23
# 3. 0.3*0.3 + 0.3*0.2 + 0.2*0.1 + 0.2*0.4 = 0.25
# 4. 0.3*0.4 + 0.3*0.3 + 0.2*0.2 + 0.2*0.1 = 0.27
statement ok
COPY test_knn_ivf_ip_filter FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# mertic ip will order descendingly. The query will return row 4, 3, 2
query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3);
----
8
6
4

# copy to create another new block
# there will has 2 knn_scan operator to scan the blocks, and one merge_knn to merge
statement ok
COPY test_knn_ivf_ip_filter FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# the query will return block 1 row 4, block 2 row 4 and a row 3
query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3);
----
8
8
6

statement ok
CREATE INDEX idx_ivf__ip ON test_knn_ivf_ip_filter (c2) USING IVF WITH (metric = ip);

# the query will return row 4 from block 1, 2 and 3
query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3);
----
8
8
6

query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3) WHERE c1 < 7;
----
6
6
4

query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 13) WHERE c1 < 7;
----
6
6
4
4
2
2

# copy to create another new block
statement ok
COPY test_knn_ivf_ip_filter FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# the query will return row 4 from block 1, 2 and 3
query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3);
----
8
8
8

query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 3) WHERE c1 < 7;
----
6
6
6

query I
SELECT c1 FROM test_knn_ivf_ip_filter SEARCH MATCH VECTOR  (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'ip', 13) WHERE c1 < 7;
----
6
6
6
4
4
4
2
2
2

statement ok
DROP TABLE test_knn_ivf_ip_filter;