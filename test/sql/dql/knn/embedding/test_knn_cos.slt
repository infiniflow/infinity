statement ok
DROP TABLE IF EXISTS test_knn_cos;

statement ok
CREATE TABLE test_knn_cos(c1 INT, c2 EMBEDDING(FLOAT, 4));

# copy to create one block
# the csv has 4 rows, the cosine distance to target([0.3, 0.3, 0.2, 0.2]) is:
# 1. (0.3*0.4+0.3*0.3+0.2*0.2+0.2*0.1) / sqrt((0.3^2+0.3^2+0.2^2+0.2^2) * (0.4^2+0.3^2+0.2^2+0.1^2)) = 0.96675508
# 2. (0.3*0.3+0.3*0.2+0.2*0.1+0.2*0.4) / sqrt((0.3^2+0.3^2+0.2^2+0.2^2) * (0.3^2+0.2^2+0.1^2+0.4^2)) = 0.895143593
# 3. (0.3*0.2+0.3*0.1+0.2*0.3+0.2*0.4) / sqrt((0.3^2+0.3^2+0.2^2+0.2^2) * (0.2^2+0.1^2+0.3^2+0.4^2)) = 0.823532105
# 4. (0.3*0.1+0.3*0.2+0.2*0.3-0.2*0.2) / sqrt((0.3^2+0.3^2+0.2^2+0.2^2) * (0.1^2+0.2^2+0.3^2+(-0.2)^2)) = 0.50847518
statement ok
COPY test_knn_cos FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# metric cos will order descendingly. The query will return row 1, 2, 3
query I
SELECT c1 FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);
----
8
6
4

query I
SELECT c2 FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);
----
[0.4,0.3,0.2,0.1]
[0.3,0.2,0.1,0.4]
[0.2,0.1,0.3,0.4]

query II
SELECT c1, ROW_ID(), SIMILARITY() FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);
----
8 3 0.966755
6 2 0.895144
4 1 0.823532

statement error
SELECT c1, ROW_ID() DISTANCE() FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);

# copy to create another new block
# there will has 2 knn_scan operator to scan the blocks, and one merge_knn to merge
statement ok
COPY test_knn_cos FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# the query will return block 1 row 4, block 2 row 4 and a row 3
query I
SELECT c1 FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);
----
8
8
6

# copy to create another new block
statement ok
COPY test_knn_cos FROM '/var/infinity/test_data/embedding_float_dim4.csv' WITH (DELIMITER ',', FORMAT CSV);

# the query will return row 4 from block 1, 2 and 3
query I
SELECT c1 FROM test_knn_cos SEARCH MATCH VECTOR (c2, [0.3, 0.3, 0.2, 0.2], 'float', 'cosine', 3);
----
8
8
8

statement ok
DROP TABLE test_knn_cos;
